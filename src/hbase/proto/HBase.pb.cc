// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HBase.proto

#include "HBase.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_HBase_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HBase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BytesBytesPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HBase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NameBytesPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HBase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NameStringPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HBase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RegionSpecifier;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HBase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServerName;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HBase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TableName;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HBase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TimeRange;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HBase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VersionInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HBase_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ColumnFamilySchema;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HBase_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RegionExceptionMessage;
}  // namespace protobuf_HBase_2eproto
namespace hbase {
namespace pb {
class TableNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableName>
      _instance;
} _TableName_default_instance_;
class TableSchemaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableSchema>
      _instance;
} _TableSchema_default_instance_;
class TableStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableState>
      _instance;
} _TableState_default_instance_;
class ColumnFamilySchemaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ColumnFamilySchema>
      _instance;
} _ColumnFamilySchema_default_instance_;
class RegionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionInfo>
      _instance;
} _RegionInfo_default_instance_;
class FavoredNodesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FavoredNodes>
      _instance;
} _FavoredNodes_default_instance_;
class RegionSpecifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionSpecifier>
      _instance;
} _RegionSpecifier_default_instance_;
class TimeRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeRange>
      _instance;
} _TimeRange_default_instance_;
class TimeRangeTrackerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeRangeTracker>
      _instance;
} _TimeRangeTracker_default_instance_;
class ColumnFamilyTimeRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ColumnFamilyTimeRange>
      _instance;
} _ColumnFamilyTimeRange_default_instance_;
class ServerNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerName>
      _instance;
} _ServerName_default_instance_;
class CoprocessorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Coprocessor>
      _instance;
} _Coprocessor_default_instance_;
class NameStringPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NameStringPair>
      _instance;
} _NameStringPair_default_instance_;
class NameBytesPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NameBytesPair>
      _instance;
} _NameBytesPair_default_instance_;
class BytesBytesPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytesBytesPair>
      _instance;
} _BytesBytesPair_default_instance_;
class NameInt64PairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NameInt64Pair>
      _instance;
} _NameInt64Pair_default_instance_;
class ProcedureDescriptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureDescription>
      _instance;
} _ProcedureDescription_default_instance_;
class EmptyMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmptyMsg>
      _instance;
} _EmptyMsg_default_instance_;
class LongMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LongMsg>
      _instance;
} _LongMsg_default_instance_;
class DoubleMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DoubleMsg>
      _instance;
} _DoubleMsg_default_instance_;
class BigDecimalMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BigDecimalMsg>
      _instance;
} _BigDecimalMsg_default_instance_;
class UUIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UUID>
      _instance;
} _UUID_default_instance_;
class NamespaceDescriptorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NamespaceDescriptor>
      _instance;
} _NamespaceDescriptor_default_instance_;
class VersionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VersionInfo>
      _instance;
} _VersionInfo_default_instance_;
class RegionServerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionServerInfo>
      _instance;
} _RegionServerInfo_default_instance_;
class RegionExceptionMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionExceptionMessage>
      _instance;
} _RegionExceptionMessage_default_instance_;
class CacheEvictionStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CacheEvictionStats>
      _instance;
} _CacheEvictionStats_default_instance_;
}  // namespace pb
}  // namespace hbase
namespace protobuf_HBase_2eproto {
static void InitDefaultsTableName() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_TableName_default_instance_;
    new (ptr) ::hbase::pb::TableName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::TableName::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TableName =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTableName}, {}};

static void InitDefaultsTableSchema() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_TableSchema_default_instance_;
    new (ptr) ::hbase::pb::TableSchema();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::TableSchema::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_TableSchema =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsTableSchema}, {
      &protobuf_HBase_2eproto::scc_info_TableName.base,
      &protobuf_HBase_2eproto::scc_info_BytesBytesPair.base,
      &protobuf_HBase_2eproto::scc_info_ColumnFamilySchema.base,
      &protobuf_HBase_2eproto::scc_info_NameStringPair.base,}};

static void InitDefaultsTableState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_TableState_default_instance_;
    new (ptr) ::hbase::pb::TableState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::TableState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TableState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTableState}, {}};

static void InitDefaultsColumnFamilySchema() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_ColumnFamilySchema_default_instance_;
    new (ptr) ::hbase::pb::ColumnFamilySchema();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::ColumnFamilySchema::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ColumnFamilySchema =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsColumnFamilySchema}, {
      &protobuf_HBase_2eproto::scc_info_BytesBytesPair.base,
      &protobuf_HBase_2eproto::scc_info_NameStringPair.base,}};

static void InitDefaultsRegionInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_RegionInfo_default_instance_;
    new (ptr) ::hbase::pb::RegionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::RegionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RegionInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRegionInfo}, {
      &protobuf_HBase_2eproto::scc_info_TableName.base,}};

static void InitDefaultsFavoredNodes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_FavoredNodes_default_instance_;
    new (ptr) ::hbase::pb::FavoredNodes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::FavoredNodes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FavoredNodes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFavoredNodes}, {
      &protobuf_HBase_2eproto::scc_info_ServerName.base,}};

static void InitDefaultsRegionSpecifier() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_RegionSpecifier_default_instance_;
    new (ptr) ::hbase::pb::RegionSpecifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::RegionSpecifier::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegionSpecifier =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegionSpecifier}, {}};

static void InitDefaultsTimeRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_TimeRange_default_instance_;
    new (ptr) ::hbase::pb::TimeRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::TimeRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TimeRange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTimeRange}, {}};

static void InitDefaultsTimeRangeTracker() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_TimeRangeTracker_default_instance_;
    new (ptr) ::hbase::pb::TimeRangeTracker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::TimeRangeTracker::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TimeRangeTracker =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTimeRangeTracker}, {}};

static void InitDefaultsColumnFamilyTimeRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_ColumnFamilyTimeRange_default_instance_;
    new (ptr) ::hbase::pb::ColumnFamilyTimeRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::ColumnFamilyTimeRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ColumnFamilyTimeRange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsColumnFamilyTimeRange}, {
      &protobuf_HBase_2eproto::scc_info_TimeRange.base,}};

static void InitDefaultsServerName() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_ServerName_default_instance_;
    new (ptr) ::hbase::pb::ServerName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::ServerName::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerName =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerName}, {}};

static void InitDefaultsCoprocessor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_Coprocessor_default_instance_;
    new (ptr) ::hbase::pb::Coprocessor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::Coprocessor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Coprocessor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCoprocessor}, {}};

static void InitDefaultsNameStringPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_NameStringPair_default_instance_;
    new (ptr) ::hbase::pb::NameStringPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::NameStringPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NameStringPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNameStringPair}, {}};

static void InitDefaultsNameBytesPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_NameBytesPair_default_instance_;
    new (ptr) ::hbase::pb::NameBytesPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::NameBytesPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NameBytesPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNameBytesPair}, {}};

static void InitDefaultsBytesBytesPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_BytesBytesPair_default_instance_;
    new (ptr) ::hbase::pb::BytesBytesPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::BytesBytesPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytesBytesPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytesBytesPair}, {}};

static void InitDefaultsNameInt64Pair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_NameInt64Pair_default_instance_;
    new (ptr) ::hbase::pb::NameInt64Pair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::NameInt64Pair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NameInt64Pair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNameInt64Pair}, {}};

static void InitDefaultsProcedureDescription() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_ProcedureDescription_default_instance_;
    new (ptr) ::hbase::pb::ProcedureDescription();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::ProcedureDescription::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureDescription =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProcedureDescription}, {
      &protobuf_HBase_2eproto::scc_info_NameStringPair.base,}};

static void InitDefaultsEmptyMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_EmptyMsg_default_instance_;
    new (ptr) ::hbase::pb::EmptyMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::EmptyMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmptyMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmptyMsg}, {}};

static void InitDefaultsLongMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_LongMsg_default_instance_;
    new (ptr) ::hbase::pb::LongMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::LongMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LongMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLongMsg}, {}};

static void InitDefaultsDoubleMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_DoubleMsg_default_instance_;
    new (ptr) ::hbase::pb::DoubleMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::DoubleMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DoubleMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDoubleMsg}, {}};

static void InitDefaultsBigDecimalMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_BigDecimalMsg_default_instance_;
    new (ptr) ::hbase::pb::BigDecimalMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::BigDecimalMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BigDecimalMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBigDecimalMsg}, {}};

static void InitDefaultsUUID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_UUID_default_instance_;
    new (ptr) ::hbase::pb::UUID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::UUID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UUID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUUID}, {}};

static void InitDefaultsNamespaceDescriptor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_NamespaceDescriptor_default_instance_;
    new (ptr) ::hbase::pb::NamespaceDescriptor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::NamespaceDescriptor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NamespaceDescriptor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNamespaceDescriptor}, {
      &protobuf_HBase_2eproto::scc_info_NameStringPair.base,}};

static void InitDefaultsVersionInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_VersionInfo_default_instance_;
    new (ptr) ::hbase::pb::VersionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::VersionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VersionInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersionInfo}, {}};

static void InitDefaultsRegionServerInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_RegionServerInfo_default_instance_;
    new (ptr) ::hbase::pb::RegionServerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::RegionServerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RegionServerInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRegionServerInfo}, {
      &protobuf_HBase_2eproto::scc_info_VersionInfo.base,}};

static void InitDefaultsRegionExceptionMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_RegionExceptionMessage_default_instance_;
    new (ptr) ::hbase::pb::RegionExceptionMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::RegionExceptionMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RegionExceptionMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRegionExceptionMessage}, {
      &protobuf_HBase_2eproto::scc_info_RegionSpecifier.base,
      &protobuf_HBase_2eproto::scc_info_NameBytesPair.base,}};

static void InitDefaultsCacheEvictionStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hbase::pb::_CacheEvictionStats_default_instance_;
    new (ptr) ::hbase::pb::CacheEvictionStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hbase::pb::CacheEvictionStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CacheEvictionStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCacheEvictionStats}, {
      &protobuf_HBase_2eproto::scc_info_RegionExceptionMessage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TableName.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TableSchema.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TableState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ColumnFamilySchema.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegionInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FavoredNodes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegionSpecifier.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TimeRange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TimeRangeTracker.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ColumnFamilyTimeRange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerName.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Coprocessor.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NameStringPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NameBytesPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytesBytesPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NameInt64Pair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureDescription.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmptyMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LongMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DoubleMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BigDecimalMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UUID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NamespaceDescriptor.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VersionInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegionServerInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegionExceptionMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CacheEvictionStats.base);
}

::google::protobuf::Metadata file_level_metadata[27];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TableName, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TableName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TableName, namespace__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TableName, qualifier_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TableSchema, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TableSchema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TableSchema, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TableSchema, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TableSchema, column_families_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TableSchema, configuration_),
  0,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TableState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TableState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TableState, state_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ColumnFamilySchema, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ColumnFamilySchema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ColumnFamilySchema, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ColumnFamilySchema, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ColumnFamilySchema, configuration_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionInfo, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionInfo, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionInfo, start_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionInfo, end_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionInfo, offline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionInfo, split_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionInfo, replica_id_),
  3,
  2,
  0,
  1,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::FavoredNodes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::FavoredNodes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::FavoredNodes, favored_node_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionSpecifier, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionSpecifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionSpecifier, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionSpecifier, value_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TimeRange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TimeRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TimeRange, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TimeRange, to_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TimeRangeTracker, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TimeRangeTracker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TimeRangeTracker, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::TimeRangeTracker, to_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ColumnFamilyTimeRange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ColumnFamilyTimeRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ColumnFamilyTimeRange, column_family_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ColumnFamilyTimeRange, time_range_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ServerName, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ServerName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ServerName, host_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ServerName, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ServerName, start_code_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::Coprocessor, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::Coprocessor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::Coprocessor, name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NameStringPair, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NameStringPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NameStringPair, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NameStringPair, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NameBytesPair, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NameBytesPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NameBytesPair, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NameBytesPair, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::BytesBytesPair, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::BytesBytesPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::BytesBytesPair, first_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::BytesBytesPair, second_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NameInt64Pair, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NameInt64Pair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NameInt64Pair, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NameInt64Pair, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ProcedureDescription, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ProcedureDescription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ProcedureDescription, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ProcedureDescription, instance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ProcedureDescription, creation_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::ProcedureDescription, configuration_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::EmptyMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::EmptyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::LongMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::LongMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::LongMsg, long_msg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::DoubleMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::DoubleMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::DoubleMsg, double_msg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::BigDecimalMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::BigDecimalMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::BigDecimalMsg, bigdecimal_msg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::UUID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::UUID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::UUID, least_sig_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::UUID, most_sig_bits_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NamespaceDescriptor, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NamespaceDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NamespaceDescriptor, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::NamespaceDescriptor, configuration_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::VersionInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::VersionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::VersionInfo, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::VersionInfo, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::VersionInfo, revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::VersionInfo, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::VersionInfo, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::VersionInfo, src_checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::VersionInfo, version_major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::VersionInfo, version_minor_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionServerInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionServerInfo, infoport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionServerInfo, version_info_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionExceptionMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionExceptionMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionExceptionMessage, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::RegionExceptionMessage, exception_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::CacheEvictionStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::CacheEvictionStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::CacheEvictionStats, evicted_blocks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::CacheEvictionStats, bytes_evicted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::CacheEvictionStats, max_cache_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hbase::pb::CacheEvictionStats, exception_),
  0,
  1,
  2,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::hbase::pb::TableName)},
  { 9, 18, sizeof(::hbase::pb::TableSchema)},
  { 22, 28, sizeof(::hbase::pb::TableState)},
  { 29, 37, sizeof(::hbase::pb::ColumnFamilySchema)},
  { 40, 52, sizeof(::hbase::pb::RegionInfo)},
  { 59, 65, sizeof(::hbase::pb::FavoredNodes)},
  { 66, 73, sizeof(::hbase::pb::RegionSpecifier)},
  { 75, 82, sizeof(::hbase::pb::TimeRange)},
  { 84, 91, sizeof(::hbase::pb::TimeRangeTracker)},
  { 93, 100, sizeof(::hbase::pb::ColumnFamilyTimeRange)},
  { 102, 110, sizeof(::hbase::pb::ServerName)},
  { 113, 119, sizeof(::hbase::pb::Coprocessor)},
  { 120, 127, sizeof(::hbase::pb::NameStringPair)},
  { 129, 136, sizeof(::hbase::pb::NameBytesPair)},
  { 138, 145, sizeof(::hbase::pb::BytesBytesPair)},
  { 147, 154, sizeof(::hbase::pb::NameInt64Pair)},
  { 156, 165, sizeof(::hbase::pb::ProcedureDescription)},
  { 169, 174, sizeof(::hbase::pb::EmptyMsg)},
  { 174, 180, sizeof(::hbase::pb::LongMsg)},
  { 181, 187, sizeof(::hbase::pb::DoubleMsg)},
  { 188, 194, sizeof(::hbase::pb::BigDecimalMsg)},
  { 195, 202, sizeof(::hbase::pb::UUID)},
  { 204, 211, sizeof(::hbase::pb::NamespaceDescriptor)},
  { 213, 226, sizeof(::hbase::pb::VersionInfo)},
  { 234, 241, sizeof(::hbase::pb::RegionServerInfo)},
  { 243, 250, sizeof(::hbase::pb::RegionExceptionMessage)},
  { 252, 261, sizeof(::hbase::pb::CacheEvictionStats)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_TableName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_TableSchema_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_TableState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_ColumnFamilySchema_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_RegionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_FavoredNodes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_RegionSpecifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_TimeRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_TimeRangeTracker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_ColumnFamilyTimeRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_ServerName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_Coprocessor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_NameStringPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_NameBytesPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_BytesBytesPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_NameInt64Pair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_ProcedureDescription_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_EmptyMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_LongMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_DoubleMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_BigDecimalMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_UUID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_NamespaceDescriptor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_VersionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_RegionServerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_RegionExceptionMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hbase::pb::_CacheEvictionStats_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "HBase.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 27);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013HBase.proto\022\010hbase.pb\"1\n\tTableName\022\021\n\t"
      "namespace\030\001 \002(\014\022\021\n\tqualifier\030\002 \002(\014\"\314\001\n\013T"
      "ableSchema\022\'\n\ntable_name\030\001 \001(\0132\023.hbase.p"
      "b.TableName\022,\n\nattributes\030\002 \003(\0132\030.hbase."
      "pb.BytesBytesPair\0225\n\017column_families\030\003 \003"
      "(\0132\034.hbase.pb.ColumnFamilySchema\022/\n\rconf"
      "iguration\030\004 \003(\0132\030.hbase.pb.NameStringPai"
      "r\"x\n\nTableState\022)\n\005state\030\001 \002(\0162\032.hbase.p"
      "b.TableState.State\"\?\n\005State\022\013\n\007ENABLED\020\000"
      "\022\014\n\010DISABLED\020\001\022\r\n\tDISABLING\020\002\022\014\n\010ENABLIN"
      "G\020\003\"\201\001\n\022ColumnFamilySchema\022\014\n\004name\030\001 \002(\014"
      "\022,\n\nattributes\030\002 \003(\0132\030.hbase.pb.BytesByt"
      "esPair\022/\n\rconfiguration\030\003 \003(\0132\030.hbase.pb"
      ".NameStringPair\"\243\001\n\nRegionInfo\022\021\n\tregion"
      "_id\030\001 \002(\004\022\'\n\ntable_name\030\002 \002(\0132\023.hbase.pb"
      ".TableName\022\021\n\tstart_key\030\003 \001(\014\022\017\n\007end_key"
      "\030\004 \001(\014\022\017\n\007offline\030\005 \001(\010\022\r\n\005split\030\006 \001(\010\022\025"
      "\n\nreplica_id\030\007 \001(\005:\0010\":\n\014FavoredNodes\022*\n"
      "\014favored_node\030\001 \003(\0132\024.hbase.pb.ServerNam"
      "e\"\236\001\n\017RegionSpecifier\022;\n\004type\030\001 \002(\0162-.hb"
      "ase.pb.RegionSpecifier.RegionSpecifierTy"
      "pe\022\r\n\005value\030\002 \002(\014\"\?\n\023RegionSpecifierType"
      "\022\017\n\013REGION_NAME\020\001\022\027\n\023ENCODED_REGION_NAME"
      "\020\002\"%\n\tTimeRange\022\014\n\004from\030\001 \001(\004\022\n\n\002to\030\002 \001("
      "\004\",\n\020TimeRangeTracker\022\014\n\004from\030\001 \001(\004\022\n\n\002t"
      "o\030\002 \001(\004\"W\n\025ColumnFamilyTimeRange\022\025\n\rcolu"
      "mn_family\030\001 \002(\014\022\'\n\ntime_range\030\002 \002(\0132\023.hb"
      "ase.pb.TimeRange\"A\n\nServerName\022\021\n\thost_n"
      "ame\030\001 \002(\t\022\014\n\004port\030\002 \001(\r\022\022\n\nstart_code\030\003 "
      "\001(\004\"\033\n\013Coprocessor\022\014\n\004name\030\001 \002(\t\"-\n\016Name"
      "StringPair\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\""
      ",\n\rNameBytesPair\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030"
      "\002 \001(\014\"/\n\016BytesBytesPair\022\r\n\005first\030\001 \002(\014\022\016"
      "\n\006second\030\002 \002(\014\",\n\rNameInt64Pair\022\014\n\004name\030"
      "\001 \001(\t\022\r\n\005value\030\002 \001(\003\"\206\001\n\024ProcedureDescri"
      "ption\022\021\n\tsignature\030\001 \002(\t\022\020\n\010instance\030\002 \001"
      "(\t\022\030\n\rcreation_time\030\003 \001(\003:\0010\022/\n\rconfigur"
      "ation\030\004 \003(\0132\030.hbase.pb.NameStringPair\"\n\n"
      "\010EmptyMsg\"\033\n\007LongMsg\022\020\n\010long_msg\030\001 \002(\003\"\037"
      "\n\tDoubleMsg\022\022\n\ndouble_msg\030\001 \002(\001\"\'\n\rBigDe"
      "cimalMsg\022\026\n\016bigdecimal_msg\030\001 \002(\014\"5\n\004UUID"
      "\022\026\n\016least_sig_bits\030\001 \002(\004\022\025\n\rmost_sig_bit"
      "s\030\002 \002(\004\"T\n\023NamespaceDescriptor\022\014\n\004name\030\001"
      " \002(\014\022/\n\rconfiguration\030\002 \003(\0132\030.hbase.pb.N"
      "ameStringPair\"\235\001\n\013VersionInfo\022\017\n\007version"
      "\030\001 \002(\t\022\013\n\003url\030\002 \002(\t\022\020\n\010revision\030\003 \002(\t\022\014\n"
      "\004user\030\004 \002(\t\022\014\n\004date\030\005 \002(\t\022\024\n\014src_checksu"
      "m\030\006 \002(\t\022\025\n\rversion_major\030\007 \001(\r\022\025\n\rversio"
      "n_minor\030\010 \001(\r\"Q\n\020RegionServerInfo\022\020\n\010inf"
      "oPort\030\001 \001(\005\022+\n\014version_info\030\002 \001(\0132\025.hbas"
      "e.pb.VersionInfo\"o\n\026RegionExceptionMessa"
      "ge\022)\n\006region\030\001 \002(\0132\031.hbase.pb.RegionSpec"
      "ifier\022*\n\texception\030\002 \002(\0132\027.hbase.pb.Name"
      "BytesPair\"\220\001\n\022CacheEvictionStats\022\026\n\016evic"
      "ted_blocks\030\001 \001(\003\022\025\n\rbytes_evicted\030\002 \001(\003\022"
      "\026\n\016max_cache_size\030\003 \001(\003\0223\n\texception\030\004 \003"
      "(\0132 .hbase.pb.RegionExceptionMessage*r\n\013"
      "CompareType\022\010\n\004LESS\020\000\022\021\n\rLESS_OR_EQUAL\020\001"
      "\022\t\n\005EQUAL\020\002\022\r\n\tNOT_EQUAL\020\003\022\024\n\020GREATER_OR"
      "_EQUAL\020\004\022\013\n\007GREATER\020\005\022\t\n\005NO_OP\020\006*n\n\010Time"
      "Unit\022\017\n\013NANOSECONDS\020\001\022\020\n\014MICROSECONDS\020\002\022"
      "\020\n\014MILLISECONDS\020\003\022\013\n\007SECONDS\020\004\022\013\n\007MINUTE"
      "S\020\005\022\t\n\005HOURS\020\006\022\010\n\004DAYS\020\007BE\n1org.apache.h"
      "adoop.hbase.shaded.protobuf.generatedB\013H"
      "BaseProtosH\001\240\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2575);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "HBase.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_HBase_2eproto
namespace hbase {
namespace pb {
const ::google::protobuf::EnumDescriptor* TableState_State_descriptor() {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_HBase_2eproto::file_level_enum_descriptors[0];
}
bool TableState_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TableState_State TableState::ENABLED;
const TableState_State TableState::DISABLED;
const TableState_State TableState::DISABLING;
const TableState_State TableState::ENABLING;
const TableState_State TableState::State_MIN;
const TableState_State TableState::State_MAX;
const int TableState::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RegionSpecifier_RegionSpecifierType_descriptor() {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_HBase_2eproto::file_level_enum_descriptors[1];
}
bool RegionSpecifier_RegionSpecifierType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RegionSpecifier_RegionSpecifierType RegionSpecifier::REGION_NAME;
const RegionSpecifier_RegionSpecifierType RegionSpecifier::ENCODED_REGION_NAME;
const RegionSpecifier_RegionSpecifierType RegionSpecifier::RegionSpecifierType_MIN;
const RegionSpecifier_RegionSpecifierType RegionSpecifier::RegionSpecifierType_MAX;
const int RegionSpecifier::RegionSpecifierType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CompareType_descriptor() {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_HBase_2eproto::file_level_enum_descriptors[2];
}
bool CompareType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TimeUnit_descriptor() {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_HBase_2eproto::file_level_enum_descriptors[3];
}
bool TimeUnit_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TableName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableName::kNamespaceFieldNumber;
const int TableName::kQualifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableName::TableName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_TableName.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.TableName)
}
TableName::TableName(const TableName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_namespace_()) {
    namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
  }
  qualifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_qualifier()) {
    qualifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qualifier_);
  }
  // @@protoc_insertion_point(copy_constructor:hbase.pb.TableName)
}

void TableName::SharedCtor() {
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qualifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TableName::~TableName() {
  // @@protoc_insertion_point(destructor:hbase.pb.TableName)
  SharedDtor();
}

void TableName::SharedDtor() {
  namespace__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qualifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TableName::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableName::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableName& TableName::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_TableName.base);
  return *internal_default_instance();
}


void TableName::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.TableName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      namespace__.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      qualifier_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TableName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.TableName)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes namespace = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_namespace_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes qualifier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_qualifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.TableName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.TableName)
  return false;
#undef DO_
}

void TableName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.TableName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes namespace = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->namespace_(), output);
  }

  // required bytes qualifier = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->qualifier(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.TableName)
}

::google::protobuf::uint8* TableName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.TableName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes namespace = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->namespace_(), target);
  }

  // required bytes qualifier = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->qualifier(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.TableName)
  return target;
}

size_t TableName::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hbase.pb.TableName)
  size_t total_size = 0;

  if (has_namespace_()) {
    // required bytes namespace = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->namespace_());
  }

  if (has_qualifier()) {
    // required bytes qualifier = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->qualifier());
  }

  return total_size;
}
size_t TableName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.TableName)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes namespace = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->namespace_());

    // required bytes qualifier = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->qualifier());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.TableName)
  GOOGLE_DCHECK_NE(&from, this);
  const TableName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.TableName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.TableName)
    MergeFrom(*source);
  }
}

void TableName::MergeFrom(const TableName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.TableName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_namespace_();
      namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_qualifier();
      qualifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qualifier_);
    }
  }
}

void TableName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.TableName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableName::CopyFrom(const TableName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.TableName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableName::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TableName::Swap(TableName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableName::InternalSwap(TableName* other) {
  using std::swap;
  namespace__.Swap(&other->namespace__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  qualifier_.Swap(&other->qualifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableName::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableSchema::InitAsDefaultInstance() {
  ::hbase::pb::_TableSchema_default_instance_._instance.get_mutable()->table_name_ = const_cast< ::hbase::pb::TableName*>(
      ::hbase::pb::TableName::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableSchema::kTableNameFieldNumber;
const int TableSchema::kAttributesFieldNumber;
const int TableSchema::kColumnFamiliesFieldNumber;
const int TableSchema::kConfigurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableSchema::TableSchema()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_TableSchema.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.TableSchema)
}
TableSchema::TableSchema(const TableSchema& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      attributes_(from.attributes_),
      column_families_(from.column_families_),
      configuration_(from.configuration_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_table_name()) {
    table_name_ = new ::hbase::pb::TableName(*from.table_name_);
  } else {
    table_name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:hbase.pb.TableSchema)
}

void TableSchema::SharedCtor() {
  table_name_ = NULL;
}

TableSchema::~TableSchema() {
  // @@protoc_insertion_point(destructor:hbase.pb.TableSchema)
  SharedDtor();
}

void TableSchema::SharedDtor() {
  if (this != internal_default_instance()) delete table_name_;
}

void TableSchema::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableSchema::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableSchema& TableSchema::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_TableSchema.base);
  return *internal_default_instance();
}


void TableSchema::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.TableSchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  column_families_.Clear();
  configuration_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(table_name_ != NULL);
    table_name_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TableSchema::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.TableSchema)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hbase.pb.TableName table_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hbase.pb.BytesBytesPair attributes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hbase.pb.ColumnFamilySchema column_families = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_column_families()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hbase.pb.NameStringPair configuration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.TableSchema)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.TableSchema)
  return false;
#undef DO_
}

void TableSchema::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.TableSchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hbase.pb.TableName table_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_table_name(), output);
  }

  // repeated .hbase.pb.BytesBytesPair attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->attributes(static_cast<int>(i)),
      output);
  }

  // repeated .hbase.pb.ColumnFamilySchema column_families = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_families_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->column_families(static_cast<int>(i)),
      output);
  }

  // repeated .hbase.pb.NameStringPair configuration = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configuration_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->configuration(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.TableSchema)
}

::google::protobuf::uint8* TableSchema::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.TableSchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hbase.pb.TableName table_name = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_table_name(), deterministic, target);
  }

  // repeated .hbase.pb.BytesBytesPair attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .hbase.pb.ColumnFamilySchema column_families = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_families_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->column_families(static_cast<int>(i)), deterministic, target);
  }

  // repeated .hbase.pb.NameStringPair configuration = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configuration_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->configuration(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.TableSchema)
  return target;
}

size_t TableSchema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.TableSchema)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .hbase.pb.BytesBytesPair attributes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  // repeated .hbase.pb.ColumnFamilySchema column_families = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->column_families_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->column_families(static_cast<int>(i)));
    }
  }

  // repeated .hbase.pb.NameStringPair configuration = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->configuration_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->configuration(static_cast<int>(i)));
    }
  }

  // optional .hbase.pb.TableName table_name = 1;
  if (has_table_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *table_name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableSchema::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.TableSchema)
  GOOGLE_DCHECK_NE(&from, this);
  const TableSchema* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableSchema>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.TableSchema)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.TableSchema)
    MergeFrom(*source);
  }
}

void TableSchema::MergeFrom(const TableSchema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.TableSchema)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  column_families_.MergeFrom(from.column_families_);
  configuration_.MergeFrom(from.configuration_);
  if (from.has_table_name()) {
    mutable_table_name()->::hbase::pb::TableName::MergeFrom(from.table_name());
  }
}

void TableSchema::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.TableSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableSchema::CopyFrom(const TableSchema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.TableSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableSchema::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->attributes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->column_families())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->configuration())) return false;
  if (has_table_name()) {
    if (!this->table_name_->IsInitialized()) return false;
  }
  return true;
}

void TableSchema::Swap(TableSchema* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableSchema::InternalSwap(TableSchema* other) {
  using std::swap;
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  CastToBase(&column_families_)->InternalSwap(CastToBase(&other->column_families_));
  CastToBase(&configuration_)->InternalSwap(CastToBase(&other->configuration_));
  swap(table_name_, other->table_name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableSchema::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableState::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableState::TableState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_TableState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.TableState)
}
TableState::TableState(const TableState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:hbase.pb.TableState)
}

void TableState::SharedCtor() {
  state_ = 0;
}

TableState::~TableState() {
  // @@protoc_insertion_point(destructor:hbase.pb.TableState)
  SharedDtor();
}

void TableState::SharedDtor() {
}

void TableState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableState::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableState& TableState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_TableState.base);
  return *internal_default_instance();
}


void TableState::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.TableState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TableState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.TableState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .hbase.pb.TableState.State state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hbase::pb::TableState_State_IsValid(value)) {
            set_state(static_cast< ::hbase::pb::TableState_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.TableState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.TableState)
  return false;
#undef DO_
}

void TableState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.TableState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .hbase.pb.TableState.State state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.TableState)
}

::google::protobuf::uint8* TableState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.TableState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .hbase.pb.TableState.State state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.TableState)
  return target;
}

size_t TableState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.TableState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .hbase.pb.TableState.State state = 1;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.TableState)
  GOOGLE_DCHECK_NE(&from, this);
  const TableState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.TableState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.TableState)
    MergeFrom(*source);
  }
}

void TableState::MergeFrom(const TableState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.TableState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    set_state(from.state());
  }
}

void TableState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.TableState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableState::CopyFrom(const TableState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.TableState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void TableState::Swap(TableState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableState::InternalSwap(TableState* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableState::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ColumnFamilySchema::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColumnFamilySchema::kNameFieldNumber;
const int ColumnFamilySchema::kAttributesFieldNumber;
const int ColumnFamilySchema::kConfigurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColumnFamilySchema::ColumnFamilySchema()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_ColumnFamilySchema.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.ColumnFamilySchema)
}
ColumnFamilySchema::ColumnFamilySchema(const ColumnFamilySchema& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      attributes_(from.attributes_),
      configuration_(from.configuration_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:hbase.pb.ColumnFamilySchema)
}

void ColumnFamilySchema::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ColumnFamilySchema::~ColumnFamilySchema() {
  // @@protoc_insertion_point(destructor:hbase.pb.ColumnFamilySchema)
  SharedDtor();
}

void ColumnFamilySchema::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ColumnFamilySchema::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ColumnFamilySchema::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ColumnFamilySchema& ColumnFamilySchema::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_ColumnFamilySchema.base);
  return *internal_default_instance();
}


void ColumnFamilySchema::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.ColumnFamilySchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  configuration_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ColumnFamilySchema::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.ColumnFamilySchema)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hbase.pb.BytesBytesPair attributes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hbase.pb.NameStringPair configuration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.ColumnFamilySchema)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.ColumnFamilySchema)
  return false;
#undef DO_
}

void ColumnFamilySchema::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.ColumnFamilySchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // repeated .hbase.pb.BytesBytesPair attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->attributes(static_cast<int>(i)),
      output);
  }

  // repeated .hbase.pb.NameStringPair configuration = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configuration_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->configuration(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.ColumnFamilySchema)
}

::google::protobuf::uint8* ColumnFamilySchema::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.ColumnFamilySchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes name = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // repeated .hbase.pb.BytesBytesPair attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .hbase.pb.NameStringPair configuration = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configuration_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->configuration(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.ColumnFamilySchema)
  return target;
}

size_t ColumnFamilySchema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.ColumnFamilySchema)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }
  // repeated .hbase.pb.BytesBytesPair attributes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  // repeated .hbase.pb.NameStringPair configuration = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->configuration_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->configuration(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ColumnFamilySchema::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.ColumnFamilySchema)
  GOOGLE_DCHECK_NE(&from, this);
  const ColumnFamilySchema* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ColumnFamilySchema>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.ColumnFamilySchema)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.ColumnFamilySchema)
    MergeFrom(*source);
  }
}

void ColumnFamilySchema::MergeFrom(const ColumnFamilySchema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.ColumnFamilySchema)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  configuration_.MergeFrom(from.configuration_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ColumnFamilySchema::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.ColumnFamilySchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColumnFamilySchema::CopyFrom(const ColumnFamilySchema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.ColumnFamilySchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnFamilySchema::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attributes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->configuration())) return false;
  return true;
}

void ColumnFamilySchema::Swap(ColumnFamilySchema* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ColumnFamilySchema::InternalSwap(ColumnFamilySchema* other) {
  using std::swap;
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  CastToBase(&configuration_)->InternalSwap(CastToBase(&other->configuration_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ColumnFamilySchema::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegionInfo::InitAsDefaultInstance() {
  ::hbase::pb::_RegionInfo_default_instance_._instance.get_mutable()->table_name_ = const_cast< ::hbase::pb::TableName*>(
      ::hbase::pb::TableName::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionInfo::kRegionIdFieldNumber;
const int RegionInfo::kTableNameFieldNumber;
const int RegionInfo::kStartKeyFieldNumber;
const int RegionInfo::kEndKeyFieldNumber;
const int RegionInfo::kOfflineFieldNumber;
const int RegionInfo::kSplitFieldNumber;
const int RegionInfo::kReplicaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionInfo::RegionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_RegionInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.RegionInfo)
}
RegionInfo::RegionInfo(const RegionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_start_key()) {
    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  end_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_end_key()) {
    end_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_key_);
  }
  if (from.has_table_name()) {
    table_name_ = new ::hbase::pb::TableName(*from.table_name_);
  } else {
    table_name_ = NULL;
  }
  ::memcpy(&region_id_, &from.region_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&replica_id_) -
    reinterpret_cast<char*>(&region_id_)) + sizeof(replica_id_));
  // @@protoc_insertion_point(copy_constructor:hbase.pb.RegionInfo)
}

void RegionInfo::SharedCtor() {
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&table_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replica_id_) -
      reinterpret_cast<char*>(&table_name_)) + sizeof(replica_id_));
}

RegionInfo::~RegionInfo() {
  // @@protoc_insertion_point(destructor:hbase.pb.RegionInfo)
  SharedDtor();
}

void RegionInfo::SharedDtor() {
  start_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete table_name_;
}

void RegionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegionInfo::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionInfo& RegionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_RegionInfo.base);
  return *internal_default_instance();
}


void RegionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.RegionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      start_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      end_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(table_name_ != NULL);
      table_name_->Clear();
    }
  }
  if (cached_has_bits & 120u) {
    ::memset(&region_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&replica_id_) -
        reinterpret_cast<char*>(&region_id_)) + sizeof(replica_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.RegionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 region_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_region_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .hbase.pb.TableName table_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes start_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes end_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool offline = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_offline();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &offline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool split = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_split();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &split_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 replica_id = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_replica_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &replica_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.RegionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.RegionInfo)
  return false;
#undef DO_
}

void RegionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.RegionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 region_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->region_id(), output);
  }

  // required .hbase.pb.TableName table_name = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_table_name(), output);
  }

  // optional bytes start_key = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->start_key(), output);
  }

  // optional bytes end_key = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->end_key(), output);
  }

  // optional bool offline = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->offline(), output);
  }

  // optional bool split = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->split(), output);
  }

  // optional int32 replica_id = 7 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->replica_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.RegionInfo)
}

::google::protobuf::uint8* RegionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.RegionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 region_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->region_id(), target);
  }

  // required .hbase.pb.TableName table_name = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_table_name(), deterministic, target);
  }

  // optional bytes start_key = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->start_key(), target);
  }

  // optional bytes end_key = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->end_key(), target);
  }

  // optional bool offline = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->offline(), target);
  }

  // optional bool split = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->split(), target);
  }

  // optional int32 replica_id = 7 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->replica_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.RegionInfo)
  return target;
}

size_t RegionInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hbase.pb.RegionInfo)
  size_t total_size = 0;

  if (has_table_name()) {
    // required .hbase.pb.TableName table_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *table_name_);
  }

  if (has_region_id()) {
    // required uint64 region_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  return total_size;
}
size_t RegionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.RegionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required .hbase.pb.TableName table_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *table_name_);

    // required uint64 region_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes start_key = 3;
    if (has_start_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->start_key());
    }

    // optional bytes end_key = 4;
    if (has_end_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->end_key());
    }

  }
  if (_has_bits_[0 / 32] & 112u) {
    // optional bool offline = 5;
    if (has_offline()) {
      total_size += 1 + 1;
    }

    // optional bool split = 6;
    if (has_split()) {
      total_size += 1 + 1;
    }

    // optional int32 replica_id = 7 [default = 0];
    if (has_replica_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->replica_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.RegionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.RegionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.RegionInfo)
    MergeFrom(*source);
  }
}

void RegionInfo::MergeFrom(const RegionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.RegionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_start_key();
      start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_end_key();
      end_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_table_name()->::hbase::pb::TableName::MergeFrom(from.table_name());
    }
    if (cached_has_bits & 0x00000008u) {
      region_id_ = from.region_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      offline_ = from.offline_;
    }
    if (cached_has_bits & 0x00000020u) {
      split_ = from.split_;
    }
    if (cached_has_bits & 0x00000040u) {
      replica_id_ = from.replica_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RegionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.RegionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionInfo::CopyFrom(const RegionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.RegionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  if (has_table_name()) {
    if (!this->table_name_->IsInitialized()) return false;
  }
  return true;
}

void RegionInfo::Swap(RegionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionInfo::InternalSwap(RegionInfo* other) {
  using std::swap;
  start_key_.Swap(&other->start_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  end_key_.Swap(&other->end_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(table_name_, other->table_name_);
  swap(region_id_, other->region_id_);
  swap(offline_, other->offline_);
  swap(split_, other->split_);
  swap(replica_id_, other->replica_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegionInfo::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FavoredNodes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FavoredNodes::kFavoredNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FavoredNodes::FavoredNodes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_FavoredNodes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.FavoredNodes)
}
FavoredNodes::FavoredNodes(const FavoredNodes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      favored_node_(from.favored_node_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hbase.pb.FavoredNodes)
}

void FavoredNodes::SharedCtor() {
}

FavoredNodes::~FavoredNodes() {
  // @@protoc_insertion_point(destructor:hbase.pb.FavoredNodes)
  SharedDtor();
}

void FavoredNodes::SharedDtor() {
}

void FavoredNodes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FavoredNodes::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FavoredNodes& FavoredNodes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_FavoredNodes.base);
  return *internal_default_instance();
}


void FavoredNodes::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.FavoredNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  favored_node_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FavoredNodes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.FavoredNodes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hbase.pb.ServerName favored_node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_favored_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.FavoredNodes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.FavoredNodes)
  return false;
#undef DO_
}

void FavoredNodes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.FavoredNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hbase.pb.ServerName favored_node = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->favored_node_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->favored_node(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.FavoredNodes)
}

::google::protobuf::uint8* FavoredNodes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.FavoredNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hbase.pb.ServerName favored_node = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->favored_node_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->favored_node(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.FavoredNodes)
  return target;
}

size_t FavoredNodes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.FavoredNodes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .hbase.pb.ServerName favored_node = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->favored_node_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->favored_node(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FavoredNodes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.FavoredNodes)
  GOOGLE_DCHECK_NE(&from, this);
  const FavoredNodes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FavoredNodes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.FavoredNodes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.FavoredNodes)
    MergeFrom(*source);
  }
}

void FavoredNodes::MergeFrom(const FavoredNodes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.FavoredNodes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  favored_node_.MergeFrom(from.favored_node_);
}

void FavoredNodes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.FavoredNodes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FavoredNodes::CopyFrom(const FavoredNodes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.FavoredNodes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FavoredNodes::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->favored_node())) return false;
  return true;
}

void FavoredNodes::Swap(FavoredNodes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FavoredNodes::InternalSwap(FavoredNodes* other) {
  using std::swap;
  CastToBase(&favored_node_)->InternalSwap(CastToBase(&other->favored_node_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FavoredNodes::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegionSpecifier::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionSpecifier::kTypeFieldNumber;
const int RegionSpecifier::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionSpecifier::RegionSpecifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_RegionSpecifier.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.RegionSpecifier)
}
RegionSpecifier::RegionSpecifier(const RegionSpecifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:hbase.pb.RegionSpecifier)
}

void RegionSpecifier::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 1;
}

RegionSpecifier::~RegionSpecifier() {
  // @@protoc_insertion_point(destructor:hbase.pb.RegionSpecifier)
  SharedDtor();
}

void RegionSpecifier::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegionSpecifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegionSpecifier::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionSpecifier& RegionSpecifier::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_RegionSpecifier.base);
  return *internal_default_instance();
}


void RegionSpecifier::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.RegionSpecifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegionSpecifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.RegionSpecifier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .hbase.pb.RegionSpecifier.RegionSpecifierType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hbase::pb::RegionSpecifier_RegionSpecifierType_IsValid(value)) {
            set_type(static_cast< ::hbase::pb::RegionSpecifier_RegionSpecifierType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.RegionSpecifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.RegionSpecifier)
  return false;
#undef DO_
}

void RegionSpecifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.RegionSpecifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .hbase.pb.RegionSpecifier.RegionSpecifierType type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required bytes value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.RegionSpecifier)
}

::google::protobuf::uint8* RegionSpecifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.RegionSpecifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .hbase.pb.RegionSpecifier.RegionSpecifierType type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required bytes value = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.RegionSpecifier)
  return target;
}

size_t RegionSpecifier::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hbase.pb.RegionSpecifier)
  size_t total_size = 0;

  if (has_value()) {
    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  if (has_type()) {
    // required .hbase.pb.RegionSpecifier.RegionSpecifierType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t RegionSpecifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.RegionSpecifier)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());

    // required .hbase.pb.RegionSpecifier.RegionSpecifierType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegionSpecifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.RegionSpecifier)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionSpecifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionSpecifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.RegionSpecifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.RegionSpecifier)
    MergeFrom(*source);
  }
}

void RegionSpecifier::MergeFrom(const RegionSpecifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.RegionSpecifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RegionSpecifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.RegionSpecifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionSpecifier::CopyFrom(const RegionSpecifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.RegionSpecifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionSpecifier::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RegionSpecifier::Swap(RegionSpecifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionSpecifier::InternalSwap(RegionSpecifier* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegionSpecifier::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeRange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeRange::kFromFieldNumber;
const int TimeRange::kToFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeRange::TimeRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_TimeRange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.TimeRange)
}
TimeRange::TimeRange(const TimeRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&from_, &from.from_,
    static_cast<size_t>(reinterpret_cast<char*>(&to_) -
    reinterpret_cast<char*>(&from_)) + sizeof(to_));
  // @@protoc_insertion_point(copy_constructor:hbase.pb.TimeRange)
}

void TimeRange::SharedCtor() {
  ::memset(&from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_) -
      reinterpret_cast<char*>(&from_)) + sizeof(to_));
}

TimeRange::~TimeRange() {
  // @@protoc_insertion_point(destructor:hbase.pb.TimeRange)
  SharedDtor();
}

void TimeRange::SharedDtor() {
}

void TimeRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TimeRange::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeRange& TimeRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_TimeRange.base);
  return *internal_default_instance();
}


void TimeRange::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.TimeRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&from_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&to_) -
        reinterpret_cast<char*>(&from_)) + sizeof(to_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TimeRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.TimeRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_from();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_to();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.TimeRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.TimeRange)
  return false;
#undef DO_
}

void TimeRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.TimeRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 from = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->from(), output);
  }

  // optional uint64 to = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->to(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.TimeRange)
}

::google::protobuf::uint8* TimeRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.TimeRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 from = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->from(), target);
  }

  // optional uint64 to = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->to(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.TimeRange)
  return target;
}

size_t TimeRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.TimeRange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 from = 1;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->from());
    }

    // optional uint64 to = 2;
    if (has_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->to());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimeRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.TimeRange)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.TimeRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.TimeRange)
    MergeFrom(*source);
  }
}

void TimeRange::MergeFrom(const TimeRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.TimeRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      from_ = from.from_;
    }
    if (cached_has_bits & 0x00000002u) {
      to_ = from.to_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TimeRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.TimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeRange::CopyFrom(const TimeRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.TimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeRange::IsInitialized() const {
  return true;
}

void TimeRange::Swap(TimeRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeRange::InternalSwap(TimeRange* other) {
  using std::swap;
  swap(from_, other->from_);
  swap(to_, other->to_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TimeRange::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeRangeTracker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeRangeTracker::kFromFieldNumber;
const int TimeRangeTracker::kToFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeRangeTracker::TimeRangeTracker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_TimeRangeTracker.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.TimeRangeTracker)
}
TimeRangeTracker::TimeRangeTracker(const TimeRangeTracker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&from_, &from.from_,
    static_cast<size_t>(reinterpret_cast<char*>(&to_) -
    reinterpret_cast<char*>(&from_)) + sizeof(to_));
  // @@protoc_insertion_point(copy_constructor:hbase.pb.TimeRangeTracker)
}

void TimeRangeTracker::SharedCtor() {
  ::memset(&from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_) -
      reinterpret_cast<char*>(&from_)) + sizeof(to_));
}

TimeRangeTracker::~TimeRangeTracker() {
  // @@protoc_insertion_point(destructor:hbase.pb.TimeRangeTracker)
  SharedDtor();
}

void TimeRangeTracker::SharedDtor() {
}

void TimeRangeTracker::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TimeRangeTracker::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeRangeTracker& TimeRangeTracker::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_TimeRangeTracker.base);
  return *internal_default_instance();
}


void TimeRangeTracker::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.TimeRangeTracker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&from_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&to_) -
        reinterpret_cast<char*>(&from_)) + sizeof(to_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TimeRangeTracker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.TimeRangeTracker)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_from();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_to();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.TimeRangeTracker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.TimeRangeTracker)
  return false;
#undef DO_
}

void TimeRangeTracker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.TimeRangeTracker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 from = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->from(), output);
  }

  // optional uint64 to = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->to(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.TimeRangeTracker)
}

::google::protobuf::uint8* TimeRangeTracker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.TimeRangeTracker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 from = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->from(), target);
  }

  // optional uint64 to = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->to(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.TimeRangeTracker)
  return target;
}

size_t TimeRangeTracker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.TimeRangeTracker)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 from = 1;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->from());
    }

    // optional uint64 to = 2;
    if (has_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->to());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimeRangeTracker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.TimeRangeTracker)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeRangeTracker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeRangeTracker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.TimeRangeTracker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.TimeRangeTracker)
    MergeFrom(*source);
  }
}

void TimeRangeTracker::MergeFrom(const TimeRangeTracker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.TimeRangeTracker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      from_ = from.from_;
    }
    if (cached_has_bits & 0x00000002u) {
      to_ = from.to_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TimeRangeTracker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.TimeRangeTracker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeRangeTracker::CopyFrom(const TimeRangeTracker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.TimeRangeTracker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeRangeTracker::IsInitialized() const {
  return true;
}

void TimeRangeTracker::Swap(TimeRangeTracker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeRangeTracker::InternalSwap(TimeRangeTracker* other) {
  using std::swap;
  swap(from_, other->from_);
  swap(to_, other->to_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TimeRangeTracker::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ColumnFamilyTimeRange::InitAsDefaultInstance() {
  ::hbase::pb::_ColumnFamilyTimeRange_default_instance_._instance.get_mutable()->time_range_ = const_cast< ::hbase::pb::TimeRange*>(
      ::hbase::pb::TimeRange::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColumnFamilyTimeRange::kColumnFamilyFieldNumber;
const int ColumnFamilyTimeRange::kTimeRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColumnFamilyTimeRange::ColumnFamilyTimeRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_ColumnFamilyTimeRange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.ColumnFamilyTimeRange)
}
ColumnFamilyTimeRange::ColumnFamilyTimeRange(const ColumnFamilyTimeRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  column_family_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_column_family()) {
    column_family_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_family_);
  }
  if (from.has_time_range()) {
    time_range_ = new ::hbase::pb::TimeRange(*from.time_range_);
  } else {
    time_range_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:hbase.pb.ColumnFamilyTimeRange)
}

void ColumnFamilyTimeRange::SharedCtor() {
  column_family_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_range_ = NULL;
}

ColumnFamilyTimeRange::~ColumnFamilyTimeRange() {
  // @@protoc_insertion_point(destructor:hbase.pb.ColumnFamilyTimeRange)
  SharedDtor();
}

void ColumnFamilyTimeRange::SharedDtor() {
  column_family_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete time_range_;
}

void ColumnFamilyTimeRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ColumnFamilyTimeRange::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ColumnFamilyTimeRange& ColumnFamilyTimeRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_ColumnFamilyTimeRange.base);
  return *internal_default_instance();
}


void ColumnFamilyTimeRange::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.ColumnFamilyTimeRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      column_family_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(time_range_ != NULL);
      time_range_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ColumnFamilyTimeRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.ColumnFamilyTimeRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes column_family = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_column_family()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .hbase.pb.TimeRange time_range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.ColumnFamilyTimeRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.ColumnFamilyTimeRange)
  return false;
#undef DO_
}

void ColumnFamilyTimeRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.ColumnFamilyTimeRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes column_family = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->column_family(), output);
  }

  // required .hbase.pb.TimeRange time_range = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_time_range(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.ColumnFamilyTimeRange)
}

::google::protobuf::uint8* ColumnFamilyTimeRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.ColumnFamilyTimeRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes column_family = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->column_family(), target);
  }

  // required .hbase.pb.TimeRange time_range = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_time_range(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.ColumnFamilyTimeRange)
  return target;
}

size_t ColumnFamilyTimeRange::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hbase.pb.ColumnFamilyTimeRange)
  size_t total_size = 0;

  if (has_column_family()) {
    // required bytes column_family = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->column_family());
  }

  if (has_time_range()) {
    // required .hbase.pb.TimeRange time_range = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_range_);
  }

  return total_size;
}
size_t ColumnFamilyTimeRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.ColumnFamilyTimeRange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes column_family = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->column_family());

    // required .hbase.pb.TimeRange time_range = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_range_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ColumnFamilyTimeRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.ColumnFamilyTimeRange)
  GOOGLE_DCHECK_NE(&from, this);
  const ColumnFamilyTimeRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ColumnFamilyTimeRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.ColumnFamilyTimeRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.ColumnFamilyTimeRange)
    MergeFrom(*source);
  }
}

void ColumnFamilyTimeRange::MergeFrom(const ColumnFamilyTimeRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.ColumnFamilyTimeRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_column_family();
      column_family_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_family_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_time_range()->::hbase::pb::TimeRange::MergeFrom(from.time_range());
    }
  }
}

void ColumnFamilyTimeRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.ColumnFamilyTimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColumnFamilyTimeRange::CopyFrom(const ColumnFamilyTimeRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.ColumnFamilyTimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnFamilyTimeRange::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ColumnFamilyTimeRange::Swap(ColumnFamilyTimeRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ColumnFamilyTimeRange::InternalSwap(ColumnFamilyTimeRange* other) {
  using std::swap;
  column_family_.Swap(&other->column_family_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_range_, other->time_range_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ColumnFamilyTimeRange::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerName::kHostNameFieldNumber;
const int ServerName::kPortFieldNumber;
const int ServerName::kStartCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerName::ServerName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_ServerName.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.ServerName)
}
ServerName::ServerName(const ServerName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host_name()) {
    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
  ::memcpy(&start_code_, &from.start_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&start_code_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:hbase.pb.ServerName)
}

void ServerName::SharedCtor() {
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&start_code_)) + sizeof(port_));
}

ServerName::~ServerName() {
  // @@protoc_insertion_point(destructor:hbase.pb.ServerName)
  SharedDtor();
}

void ServerName::SharedDtor() {
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerName::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerName::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerName& ServerName::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_ServerName.base);
  return *internal_default_instance();
}


void ServerName::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.ServerName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    host_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&start_code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&port_) -
        reinterpret_cast<char*>(&start_code_)) + sizeof(port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServerName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.ServerName)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string host_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_name().data(), static_cast<int>(this->host_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.ServerName.host_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 start_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_start_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.ServerName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.ServerName)
  return false;
#undef DO_
}

void ServerName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.ServerName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string host_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.ServerName.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host_name(), output);
  }

  // optional uint32 port = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->port(), output);
  }

  // optional uint64 start_code = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->start_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.ServerName)
}

::google::protobuf::uint8* ServerName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.ServerName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string host_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.ServerName.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host_name(), target);
  }

  // optional uint32 port = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->port(), target);
  }

  // optional uint64 start_code = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->start_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.ServerName)
  return target;
}

size_t ServerName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.ServerName)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string host_name = 1;
  if (has_host_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_name());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional uint64 start_code = 3;
    if (has_start_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->start_code());
    }

    // optional uint32 port = 2;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.ServerName)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.ServerName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.ServerName)
    MergeFrom(*source);
  }
}

void ServerName::MergeFrom(const ServerName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.ServerName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_host_name();
      host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      start_code_ = from.start_code_;
    }
    if (cached_has_bits & 0x00000004u) {
      port_ = from.port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ServerName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.ServerName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerName::CopyFrom(const ServerName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.ServerName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerName::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ServerName::Swap(ServerName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerName::InternalSwap(ServerName* other) {
  using std::swap;
  host_name_.Swap(&other->host_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_code_, other->start_code_);
  swap(port_, other->port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerName::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Coprocessor::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Coprocessor::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Coprocessor::Coprocessor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_Coprocessor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.Coprocessor)
}
Coprocessor::Coprocessor(const Coprocessor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:hbase.pb.Coprocessor)
}

void Coprocessor::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Coprocessor::~Coprocessor() {
  // @@protoc_insertion_point(destructor:hbase.pb.Coprocessor)
  SharedDtor();
}

void Coprocessor::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Coprocessor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Coprocessor::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Coprocessor& Coprocessor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_Coprocessor.base);
  return *internal_default_instance();
}


void Coprocessor::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.Coprocessor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Coprocessor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.Coprocessor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.Coprocessor.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.Coprocessor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.Coprocessor)
  return false;
#undef DO_
}

void Coprocessor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.Coprocessor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.Coprocessor.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.Coprocessor)
}

::google::protobuf::uint8* Coprocessor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.Coprocessor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.Coprocessor.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.Coprocessor)
  return target;
}

size_t Coprocessor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.Coprocessor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Coprocessor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.Coprocessor)
  GOOGLE_DCHECK_NE(&from, this);
  const Coprocessor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Coprocessor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.Coprocessor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.Coprocessor)
    MergeFrom(*source);
  }
}

void Coprocessor::MergeFrom(const Coprocessor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.Coprocessor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Coprocessor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.Coprocessor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coprocessor::CopyFrom(const Coprocessor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.Coprocessor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coprocessor::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Coprocessor::Swap(Coprocessor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Coprocessor::InternalSwap(Coprocessor* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Coprocessor::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NameStringPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameStringPair::kNameFieldNumber;
const int NameStringPair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NameStringPair::NameStringPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_NameStringPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.NameStringPair)
}
NameStringPair::NameStringPair(const NameStringPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:hbase.pb.NameStringPair)
}

void NameStringPair::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NameStringPair::~NameStringPair() {
  // @@protoc_insertion_point(destructor:hbase.pb.NameStringPair)
  SharedDtor();
}

void NameStringPair::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NameStringPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NameStringPair::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NameStringPair& NameStringPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_NameStringPair.base);
  return *internal_default_instance();
}


void NameStringPair::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.NameStringPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NameStringPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.NameStringPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.NameStringPair.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.NameStringPair.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.NameStringPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.NameStringPair)
  return false;
#undef DO_
}

void NameStringPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.NameStringPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.NameStringPair.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.NameStringPair.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.NameStringPair)
}

::google::protobuf::uint8* NameStringPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.NameStringPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.NameStringPair.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.NameStringPair.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.NameStringPair)
  return target;
}

size_t NameStringPair::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hbase.pb.NameStringPair)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  return total_size;
}
size_t NameStringPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.NameStringPair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NameStringPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.NameStringPair)
  GOOGLE_DCHECK_NE(&from, this);
  const NameStringPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NameStringPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.NameStringPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.NameStringPair)
    MergeFrom(*source);
  }
}

void NameStringPair::MergeFrom(const NameStringPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.NameStringPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void NameStringPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.NameStringPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NameStringPair::CopyFrom(const NameStringPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.NameStringPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameStringPair::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void NameStringPair::Swap(NameStringPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameStringPair::InternalSwap(NameStringPair* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NameStringPair::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NameBytesPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameBytesPair::kNameFieldNumber;
const int NameBytesPair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NameBytesPair::NameBytesPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_NameBytesPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.NameBytesPair)
}
NameBytesPair::NameBytesPair(const NameBytesPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:hbase.pb.NameBytesPair)
}

void NameBytesPair::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NameBytesPair::~NameBytesPair() {
  // @@protoc_insertion_point(destructor:hbase.pb.NameBytesPair)
  SharedDtor();
}

void NameBytesPair::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NameBytesPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NameBytesPair::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NameBytesPair& NameBytesPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_NameBytesPair.base);
  return *internal_default_instance();
}


void NameBytesPair::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.NameBytesPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NameBytesPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.NameBytesPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.NameBytesPair.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.NameBytesPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.NameBytesPair)
  return false;
#undef DO_
}

void NameBytesPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.NameBytesPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.NameBytesPair.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.NameBytesPair)
}

::google::protobuf::uint8* NameBytesPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.NameBytesPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.NameBytesPair.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.NameBytesPair)
  return target;
}

size_t NameBytesPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.NameBytesPair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // optional bytes value = 2;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NameBytesPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.NameBytesPair)
  GOOGLE_DCHECK_NE(&from, this);
  const NameBytesPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NameBytesPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.NameBytesPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.NameBytesPair)
    MergeFrom(*source);
  }
}

void NameBytesPair::MergeFrom(const NameBytesPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.NameBytesPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void NameBytesPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.NameBytesPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NameBytesPair::CopyFrom(const NameBytesPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.NameBytesPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameBytesPair::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void NameBytesPair::Swap(NameBytesPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameBytesPair::InternalSwap(NameBytesPair* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NameBytesPair::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytesBytesPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytesBytesPair::kFirstFieldNumber;
const int BytesBytesPair::kSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytesBytesPair::BytesBytesPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_BytesBytesPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.BytesBytesPair)
}
BytesBytesPair::BytesBytesPair(const BytesBytesPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  first_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_first()) {
    first_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_);
  }
  second_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_second()) {
    second_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.second_);
  }
  // @@protoc_insertion_point(copy_constructor:hbase.pb.BytesBytesPair)
}

void BytesBytesPair::SharedCtor() {
  first_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  second_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BytesBytesPair::~BytesBytesPair() {
  // @@protoc_insertion_point(destructor:hbase.pb.BytesBytesPair)
  SharedDtor();
}

void BytesBytesPair::SharedDtor() {
  first_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  second_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytesBytesPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytesBytesPair::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytesBytesPair& BytesBytesPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_BytesBytesPair.base);
  return *internal_default_instance();
}


void BytesBytesPair::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.BytesBytesPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      first_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      second_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytesBytesPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.BytesBytesPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes first = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_first()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes second = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_second()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.BytesBytesPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.BytesBytesPair)
  return false;
#undef DO_
}

void BytesBytesPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.BytesBytesPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes first = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->first(), output);
  }

  // required bytes second = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->second(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.BytesBytesPair)
}

::google::protobuf::uint8* BytesBytesPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.BytesBytesPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes first = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->first(), target);
  }

  // required bytes second = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->second(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.BytesBytesPair)
  return target;
}

size_t BytesBytesPair::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hbase.pb.BytesBytesPair)
  size_t total_size = 0;

  if (has_first()) {
    // required bytes first = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->first());
  }

  if (has_second()) {
    // required bytes second = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->second());
  }

  return total_size;
}
size_t BytesBytesPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.BytesBytesPair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes first = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->first());

    // required bytes second = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->second());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytesBytesPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.BytesBytesPair)
  GOOGLE_DCHECK_NE(&from, this);
  const BytesBytesPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytesBytesPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.BytesBytesPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.BytesBytesPair)
    MergeFrom(*source);
  }
}

void BytesBytesPair::MergeFrom(const BytesBytesPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.BytesBytesPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_first();
      first_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_second();
      second_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.second_);
    }
  }
}

void BytesBytesPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.BytesBytesPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytesBytesPair::CopyFrom(const BytesBytesPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.BytesBytesPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytesBytesPair::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void BytesBytesPair::Swap(BytesBytesPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytesBytesPair::InternalSwap(BytesBytesPair* other) {
  using std::swap;
  first_.Swap(&other->first_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  second_.Swap(&other->second_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytesBytesPair::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NameInt64Pair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameInt64Pair::kNameFieldNumber;
const int NameInt64Pair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NameInt64Pair::NameInt64Pair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_NameInt64Pair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.NameInt64Pair)
}
NameInt64Pair::NameInt64Pair(const NameInt64Pair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:hbase.pb.NameInt64Pair)
}

void NameInt64Pair::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = GOOGLE_LONGLONG(0);
}

NameInt64Pair::~NameInt64Pair() {
  // @@protoc_insertion_point(destructor:hbase.pb.NameInt64Pair)
  SharedDtor();
}

void NameInt64Pair::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NameInt64Pair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NameInt64Pair::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NameInt64Pair& NameInt64Pair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_NameInt64Pair.base);
  return *internal_default_instance();
}


void NameInt64Pair::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.NameInt64Pair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  value_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NameInt64Pair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.NameInt64Pair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.NameInt64Pair.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.NameInt64Pair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.NameInt64Pair)
  return false;
#undef DO_
}

void NameInt64Pair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.NameInt64Pair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.NameInt64Pair.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int64 value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.NameInt64Pair)
}

::google::protobuf::uint8* NameInt64Pair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.NameInt64Pair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.NameInt64Pair.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int64 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.NameInt64Pair)
  return target;
}

size_t NameInt64Pair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.NameInt64Pair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int64 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NameInt64Pair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.NameInt64Pair)
  GOOGLE_DCHECK_NE(&from, this);
  const NameInt64Pair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NameInt64Pair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.NameInt64Pair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.NameInt64Pair)
    MergeFrom(*source);
  }
}

void NameInt64Pair::MergeFrom(const NameInt64Pair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.NameInt64Pair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NameInt64Pair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.NameInt64Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NameInt64Pair::CopyFrom(const NameInt64Pair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.NameInt64Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameInt64Pair::IsInitialized() const {
  return true;
}

void NameInt64Pair::Swap(NameInt64Pair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameInt64Pair::InternalSwap(NameInt64Pair* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NameInt64Pair::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureDescription::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcedureDescription::kSignatureFieldNumber;
const int ProcedureDescription::kInstanceFieldNumber;
const int ProcedureDescription::kCreationTimeFieldNumber;
const int ProcedureDescription::kConfigurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureDescription::ProcedureDescription()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_ProcedureDescription.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.ProcedureDescription)
}
ProcedureDescription::ProcedureDescription(const ProcedureDescription& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      configuration_(from.configuration_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  instance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_instance()) {
    instance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_);
  }
  creation_time_ = from.creation_time_;
  // @@protoc_insertion_point(copy_constructor:hbase.pb.ProcedureDescription)
}

void ProcedureDescription::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_time_ = GOOGLE_LONGLONG(0);
}

ProcedureDescription::~ProcedureDescription() {
  // @@protoc_insertion_point(destructor:hbase.pb.ProcedureDescription)
  SharedDtor();
}

void ProcedureDescription::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProcedureDescription::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureDescription::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureDescription& ProcedureDescription::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_ProcedureDescription.base);
  return *internal_default_instance();
}


void ProcedureDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.ProcedureDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configuration_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      signature_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      instance_.ClearNonDefaultToEmptyNoArena();
    }
  }
  creation_time_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProcedureDescription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.ProcedureDescription)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.ProcedureDescription.signature");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string instance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->instance().data(), static_cast<int>(this->instance().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.ProcedureDescription.instance");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 creation_time = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_creation_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &creation_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hbase.pb.NameStringPair configuration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.ProcedureDescription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.ProcedureDescription)
  return false;
#undef DO_
}

void ProcedureDescription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.ProcedureDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string signature = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.ProcedureDescription.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signature(), output);
  }

  // optional string instance = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->instance().data(), static_cast<int>(this->instance().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.ProcedureDescription.instance");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instance(), output);
  }

  // optional int64 creation_time = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->creation_time(), output);
  }

  // repeated .hbase.pb.NameStringPair configuration = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configuration_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->configuration(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.ProcedureDescription)
}

::google::protobuf::uint8* ProcedureDescription::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.ProcedureDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string signature = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.ProcedureDescription.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signature(), target);
  }

  // optional string instance = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->instance().data(), static_cast<int>(this->instance().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.ProcedureDescription.instance");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instance(), target);
  }

  // optional int64 creation_time = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->creation_time(), target);
  }

  // repeated .hbase.pb.NameStringPair configuration = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configuration_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->configuration(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.ProcedureDescription)
  return target;
}

size_t ProcedureDescription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.ProcedureDescription)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string signature = 1;
  if (has_signature()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }
  // repeated .hbase.pb.NameStringPair configuration = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->configuration_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->configuration(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional string instance = 2;
    if (has_instance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->instance());
    }

    // optional int64 creation_time = 3 [default = 0];
    if (has_creation_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->creation_time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureDescription::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.ProcedureDescription)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureDescription* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureDescription>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.ProcedureDescription)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.ProcedureDescription)
    MergeFrom(*source);
  }
}

void ProcedureDescription::MergeFrom(const ProcedureDescription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.ProcedureDescription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  configuration_.MergeFrom(from.configuration_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_signature();
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_instance();
      instance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_);
    }
    if (cached_has_bits & 0x00000004u) {
      creation_time_ = from.creation_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProcedureDescription::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.ProcedureDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureDescription::CopyFrom(const ProcedureDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.ProcedureDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureDescription::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->configuration())) return false;
  return true;
}

void ProcedureDescription::Swap(ProcedureDescription* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureDescription::InternalSwap(ProcedureDescription* other) {
  using std::swap;
  CastToBase(&configuration_)->InternalSwap(CastToBase(&other->configuration_));
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_.Swap(&other->instance_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(creation_time_, other->creation_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureDescription::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmptyMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyMsg::EmptyMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_EmptyMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.EmptyMsg)
}
EmptyMsg::EmptyMsg(const EmptyMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hbase.pb.EmptyMsg)
}

void EmptyMsg::SharedCtor() {
}

EmptyMsg::~EmptyMsg() {
  // @@protoc_insertion_point(destructor:hbase.pb.EmptyMsg)
  SharedDtor();
}

void EmptyMsg::SharedDtor() {
}

void EmptyMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmptyMsg::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmptyMsg& EmptyMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_EmptyMsg.base);
  return *internal_default_instance();
}


void EmptyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.EmptyMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EmptyMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.EmptyMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.EmptyMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.EmptyMsg)
  return false;
#undef DO_
}

void EmptyMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.EmptyMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.EmptyMsg)
}

::google::protobuf::uint8* EmptyMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.EmptyMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.EmptyMsg)
  return target;
}

size_t EmptyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.EmptyMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmptyMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.EmptyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmptyMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.EmptyMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.EmptyMsg)
    MergeFrom(*source);
  }
}

void EmptyMsg::MergeFrom(const EmptyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.EmptyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmptyMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.EmptyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyMsg::CopyFrom(const EmptyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.EmptyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyMsg::IsInitialized() const {
  return true;
}

void EmptyMsg::Swap(EmptyMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyMsg::InternalSwap(EmptyMsg* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmptyMsg::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LongMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LongMsg::kLongMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LongMsg::LongMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_LongMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.LongMsg)
}
LongMsg::LongMsg(const LongMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  long_msg_ = from.long_msg_;
  // @@protoc_insertion_point(copy_constructor:hbase.pb.LongMsg)
}

void LongMsg::SharedCtor() {
  long_msg_ = GOOGLE_LONGLONG(0);
}

LongMsg::~LongMsg() {
  // @@protoc_insertion_point(destructor:hbase.pb.LongMsg)
  SharedDtor();
}

void LongMsg::SharedDtor() {
}

void LongMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LongMsg::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LongMsg& LongMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_LongMsg.base);
  return *internal_default_instance();
}


void LongMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.LongMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  long_msg_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LongMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.LongMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 long_msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_long_msg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &long_msg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.LongMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.LongMsg)
  return false;
#undef DO_
}

void LongMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.LongMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 long_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->long_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.LongMsg)
}

::google::protobuf::uint8* LongMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.LongMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 long_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->long_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.LongMsg)
  return target;
}

size_t LongMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.LongMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 long_msg = 1;
  if (has_long_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->long_msg());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LongMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.LongMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const LongMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LongMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.LongMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.LongMsg)
    MergeFrom(*source);
  }
}

void LongMsg::MergeFrom(const LongMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.LongMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_long_msg()) {
    set_long_msg(from.long_msg());
  }
}

void LongMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.LongMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LongMsg::CopyFrom(const LongMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.LongMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LongMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void LongMsg::Swap(LongMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LongMsg::InternalSwap(LongMsg* other) {
  using std::swap;
  swap(long_msg_, other->long_msg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LongMsg::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DoubleMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoubleMsg::kDoubleMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoubleMsg::DoubleMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_DoubleMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.DoubleMsg)
}
DoubleMsg::DoubleMsg(const DoubleMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  double_msg_ = from.double_msg_;
  // @@protoc_insertion_point(copy_constructor:hbase.pb.DoubleMsg)
}

void DoubleMsg::SharedCtor() {
  double_msg_ = 0;
}

DoubleMsg::~DoubleMsg() {
  // @@protoc_insertion_point(destructor:hbase.pb.DoubleMsg)
  SharedDtor();
}

void DoubleMsg::SharedDtor() {
}

void DoubleMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DoubleMsg::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DoubleMsg& DoubleMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_DoubleMsg.base);
  return *internal_default_instance();
}


void DoubleMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.DoubleMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  double_msg_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DoubleMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.DoubleMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double double_msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_double_msg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_msg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.DoubleMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.DoubleMsg)
  return false;
#undef DO_
}

void DoubleMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.DoubleMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double double_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->double_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.DoubleMsg)
}

::google::protobuf::uint8* DoubleMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.DoubleMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double double_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->double_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.DoubleMsg)
  return target;
}

size_t DoubleMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.DoubleMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required double double_msg = 1;
  if (has_double_msg()) {
    total_size += 1 + 8;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DoubleMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.DoubleMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const DoubleMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoubleMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.DoubleMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.DoubleMsg)
    MergeFrom(*source);
  }
}

void DoubleMsg::MergeFrom(const DoubleMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.DoubleMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_double_msg()) {
    set_double_msg(from.double_msg());
  }
}

void DoubleMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.DoubleMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoubleMsg::CopyFrom(const DoubleMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.DoubleMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoubleMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void DoubleMsg::Swap(DoubleMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoubleMsg::InternalSwap(DoubleMsg* other) {
  using std::swap;
  swap(double_msg_, other->double_msg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DoubleMsg::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BigDecimalMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BigDecimalMsg::kBigdecimalMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BigDecimalMsg::BigDecimalMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_BigDecimalMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.BigDecimalMsg)
}
BigDecimalMsg::BigDecimalMsg(const BigDecimalMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bigdecimal_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bigdecimal_msg()) {
    bigdecimal_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bigdecimal_msg_);
  }
  // @@protoc_insertion_point(copy_constructor:hbase.pb.BigDecimalMsg)
}

void BigDecimalMsg::SharedCtor() {
  bigdecimal_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BigDecimalMsg::~BigDecimalMsg() {
  // @@protoc_insertion_point(destructor:hbase.pb.BigDecimalMsg)
  SharedDtor();
}

void BigDecimalMsg::SharedDtor() {
  bigdecimal_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BigDecimalMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BigDecimalMsg::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BigDecimalMsg& BigDecimalMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_BigDecimalMsg.base);
  return *internal_default_instance();
}


void BigDecimalMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.BigDecimalMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    bigdecimal_msg_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BigDecimalMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.BigDecimalMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes bigdecimal_msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bigdecimal_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.BigDecimalMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.BigDecimalMsg)
  return false;
#undef DO_
}

void BigDecimalMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.BigDecimalMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes bigdecimal_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->bigdecimal_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.BigDecimalMsg)
}

::google::protobuf::uint8* BigDecimalMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.BigDecimalMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes bigdecimal_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->bigdecimal_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.BigDecimalMsg)
  return target;
}

size_t BigDecimalMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.BigDecimalMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes bigdecimal_msg = 1;
  if (has_bigdecimal_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bigdecimal_msg());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BigDecimalMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.BigDecimalMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const BigDecimalMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BigDecimalMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.BigDecimalMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.BigDecimalMsg)
    MergeFrom(*source);
  }
}

void BigDecimalMsg::MergeFrom(const BigDecimalMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.BigDecimalMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bigdecimal_msg()) {
    set_has_bigdecimal_msg();
    bigdecimal_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bigdecimal_msg_);
  }
}

void BigDecimalMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.BigDecimalMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BigDecimalMsg::CopyFrom(const BigDecimalMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.BigDecimalMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BigDecimalMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void BigDecimalMsg::Swap(BigDecimalMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BigDecimalMsg::InternalSwap(BigDecimalMsg* other) {
  using std::swap;
  bigdecimal_msg_.Swap(&other->bigdecimal_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BigDecimalMsg::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UUID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UUID::kLeastSigBitsFieldNumber;
const int UUID::kMostSigBitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UUID::UUID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_UUID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.UUID)
}
UUID::UUID(const UUID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&least_sig_bits_, &from.least_sig_bits_,
    static_cast<size_t>(reinterpret_cast<char*>(&most_sig_bits_) -
    reinterpret_cast<char*>(&least_sig_bits_)) + sizeof(most_sig_bits_));
  // @@protoc_insertion_point(copy_constructor:hbase.pb.UUID)
}

void UUID::SharedCtor() {
  ::memset(&least_sig_bits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&most_sig_bits_) -
      reinterpret_cast<char*>(&least_sig_bits_)) + sizeof(most_sig_bits_));
}

UUID::~UUID() {
  // @@protoc_insertion_point(destructor:hbase.pb.UUID)
  SharedDtor();
}

void UUID::SharedDtor() {
}

void UUID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UUID::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UUID& UUID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_UUID.base);
  return *internal_default_instance();
}


void UUID::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.UUID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&least_sig_bits_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&most_sig_bits_) -
        reinterpret_cast<char*>(&least_sig_bits_)) + sizeof(most_sig_bits_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UUID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.UUID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 least_sig_bits = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_least_sig_bits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &least_sig_bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 most_sig_bits = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_most_sig_bits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &most_sig_bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.UUID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.UUID)
  return false;
#undef DO_
}

void UUID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.UUID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 least_sig_bits = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->least_sig_bits(), output);
  }

  // required uint64 most_sig_bits = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->most_sig_bits(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.UUID)
}

::google::protobuf::uint8* UUID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.UUID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 least_sig_bits = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->least_sig_bits(), target);
  }

  // required uint64 most_sig_bits = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->most_sig_bits(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.UUID)
  return target;
}

size_t UUID::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hbase.pb.UUID)
  size_t total_size = 0;

  if (has_least_sig_bits()) {
    // required uint64 least_sig_bits = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->least_sig_bits());
  }

  if (has_most_sig_bits()) {
    // required uint64 most_sig_bits = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->most_sig_bits());
  }

  return total_size;
}
size_t UUID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.UUID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 least_sig_bits = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->least_sig_bits());

    // required uint64 most_sig_bits = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->most_sig_bits());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UUID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.UUID)
  GOOGLE_DCHECK_NE(&from, this);
  const UUID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UUID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.UUID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.UUID)
    MergeFrom(*source);
  }
}

void UUID::MergeFrom(const UUID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.UUID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      least_sig_bits_ = from.least_sig_bits_;
    }
    if (cached_has_bits & 0x00000002u) {
      most_sig_bits_ = from.most_sig_bits_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UUID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.UUID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UUID::CopyFrom(const UUID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.UUID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UUID::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UUID::Swap(UUID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UUID::InternalSwap(UUID* other) {
  using std::swap;
  swap(least_sig_bits_, other->least_sig_bits_);
  swap(most_sig_bits_, other->most_sig_bits_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UUID::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NamespaceDescriptor::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NamespaceDescriptor::kNameFieldNumber;
const int NamespaceDescriptor::kConfigurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NamespaceDescriptor::NamespaceDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_NamespaceDescriptor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.NamespaceDescriptor)
}
NamespaceDescriptor::NamespaceDescriptor(const NamespaceDescriptor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      configuration_(from.configuration_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:hbase.pb.NamespaceDescriptor)
}

void NamespaceDescriptor::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NamespaceDescriptor::~NamespaceDescriptor() {
  // @@protoc_insertion_point(destructor:hbase.pb.NamespaceDescriptor)
  SharedDtor();
}

void NamespaceDescriptor::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NamespaceDescriptor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NamespaceDescriptor::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NamespaceDescriptor& NamespaceDescriptor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_NamespaceDescriptor.base);
  return *internal_default_instance();
}


void NamespaceDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.NamespaceDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configuration_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NamespaceDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.NamespaceDescriptor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hbase.pb.NameStringPair configuration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.NamespaceDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.NamespaceDescriptor)
  return false;
#undef DO_
}

void NamespaceDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.NamespaceDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // repeated .hbase.pb.NameStringPair configuration = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configuration_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->configuration(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.NamespaceDescriptor)
}

::google::protobuf::uint8* NamespaceDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.NamespaceDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes name = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // repeated .hbase.pb.NameStringPair configuration = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configuration_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->configuration(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.NamespaceDescriptor)
  return target;
}

size_t NamespaceDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.NamespaceDescriptor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }
  // repeated .hbase.pb.NameStringPair configuration = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->configuration_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->configuration(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NamespaceDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.NamespaceDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const NamespaceDescriptor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NamespaceDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.NamespaceDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.NamespaceDescriptor)
    MergeFrom(*source);
  }
}

void NamespaceDescriptor::MergeFrom(const NamespaceDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.NamespaceDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  configuration_.MergeFrom(from.configuration_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void NamespaceDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.NamespaceDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NamespaceDescriptor::CopyFrom(const NamespaceDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.NamespaceDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NamespaceDescriptor::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->configuration())) return false;
  return true;
}

void NamespaceDescriptor::Swap(NamespaceDescriptor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NamespaceDescriptor::InternalSwap(NamespaceDescriptor* other) {
  using std::swap;
  CastToBase(&configuration_)->InternalSwap(CastToBase(&other->configuration_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NamespaceDescriptor::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VersionInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionInfo::kVersionFieldNumber;
const int VersionInfo::kUrlFieldNumber;
const int VersionInfo::kRevisionFieldNumber;
const int VersionInfo::kUserFieldNumber;
const int VersionInfo::kDateFieldNumber;
const int VersionInfo::kSrcChecksumFieldNumber;
const int VersionInfo::kVersionMajorFieldNumber;
const int VersionInfo::kVersionMinorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionInfo::VersionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_VersionInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.VersionInfo)
}
VersionInfo::VersionInfo(const VersionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_revision()) {
    revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revision_);
  }
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user()) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_date()) {
    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  src_checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_src_checksum()) {
    src_checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_checksum_);
  }
  ::memcpy(&version_major_, &from.version_major_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_minor_) -
    reinterpret_cast<char*>(&version_major_)) + sizeof(version_minor_));
  // @@protoc_insertion_point(copy_constructor:hbase.pb.VersionInfo)
}

void VersionInfo::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_minor_) -
      reinterpret_cast<char*>(&version_major_)) + sizeof(version_minor_));
}

VersionInfo::~VersionInfo() {
  // @@protoc_insertion_point(destructor:hbase.pb.VersionInfo)
  SharedDtor();
}

void VersionInfo::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_checksum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VersionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VersionInfo::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VersionInfo& VersionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_VersionInfo.base);
  return *internal_default_instance();
}


void VersionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.VersionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      version_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      revision_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      user_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      date_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      src_checksum_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&version_major_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&version_minor_) -
        reinterpret_cast<char*>(&version_major_)) + sizeof(version_minor_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VersionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.VersionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.VersionInfo.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.VersionInfo.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string revision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revision()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->revision().data(), static_cast<int>(this->revision().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.VersionInfo.revision");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string user = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.VersionInfo.user");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string date = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), static_cast<int>(this->date().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.VersionInfo.date");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string src_checksum = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src_checksum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src_checksum().data(), static_cast<int>(this->src_checksum().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hbase.pb.VersionInfo.src_checksum");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 version_major = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_version_major();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 version_minor = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_version_minor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.VersionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.VersionInfo)
  return false;
#undef DO_
}

void VersionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.VersionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.VersionInfo.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // required string url = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.VersionInfo.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // required string revision = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revision().data(), static_cast<int>(this->revision().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.VersionInfo.revision");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->revision(), output);
  }

  // required string user = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.VersionInfo.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user(), output);
  }

  // required string date = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.VersionInfo.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->date(), output);
  }

  // required string src_checksum = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src_checksum().data(), static_cast<int>(this->src_checksum().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.VersionInfo.src_checksum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->src_checksum(), output);
  }

  // optional uint32 version_major = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->version_major(), output);
  }

  // optional uint32 version_minor = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->version_minor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.VersionInfo)
}

::google::protobuf::uint8* VersionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.VersionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.VersionInfo.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // required string url = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.VersionInfo.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // required string revision = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revision().data(), static_cast<int>(this->revision().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.VersionInfo.revision");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->revision(), target);
  }

  // required string user = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.VersionInfo.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user(), target);
  }

  // required string date = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.VersionInfo.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->date(), target);
  }

  // required string src_checksum = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src_checksum().data(), static_cast<int>(this->src_checksum().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hbase.pb.VersionInfo.src_checksum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->src_checksum(), target);
  }

  // optional uint32 version_major = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->version_major(), target);
  }

  // optional uint32 version_minor = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->version_minor(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.VersionInfo)
  return target;
}

size_t VersionInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hbase.pb.VersionInfo)
  size_t total_size = 0;

  if (has_version()) {
    // required string version = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  if (has_url()) {
    // required string url = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  if (has_revision()) {
    // required string revision = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->revision());
  }

  if (has_user()) {
    // required string user = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  if (has_date()) {
    // required string date = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  if (has_src_checksum()) {
    // required string src_checksum = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src_checksum());
  }

  return total_size;
}
size_t VersionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.VersionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string version = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());

    // required string url = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());

    // required string revision = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->revision());

    // required string user = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());

    // required string date = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());

    // required string src_checksum = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src_checksum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional uint32 version_major = 7;
    if (has_version_major()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version_major());
    }

    // optional uint32 version_minor = 8;
    if (has_version_minor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version_minor());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VersionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.VersionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VersionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.VersionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.VersionInfo)
    MergeFrom(*source);
  }
}

void VersionInfo::MergeFrom(const VersionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.VersionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_revision();
      revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revision_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_user();
      user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_src_checksum();
      src_checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_checksum_);
    }
    if (cached_has_bits & 0x00000040u) {
      version_major_ = from.version_major_;
    }
    if (cached_has_bits & 0x00000080u) {
      version_minor_ = from.version_minor_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VersionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.VersionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionInfo::CopyFrom(const VersionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.VersionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void VersionInfo::Swap(VersionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionInfo::InternalSwap(VersionInfo* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  revision_.Swap(&other->revision_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_.Swap(&other->user_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  date_.Swap(&other->date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  src_checksum_.Swap(&other->src_checksum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_major_, other->version_major_);
  swap(version_minor_, other->version_minor_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VersionInfo::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegionServerInfo::InitAsDefaultInstance() {
  ::hbase::pb::_RegionServerInfo_default_instance_._instance.get_mutable()->version_info_ = const_cast< ::hbase::pb::VersionInfo*>(
      ::hbase::pb::VersionInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionServerInfo::kInfoPortFieldNumber;
const int RegionServerInfo::kVersionInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionServerInfo::RegionServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_RegionServerInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.RegionServerInfo)
}
RegionServerInfo::RegionServerInfo(const RegionServerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_version_info()) {
    version_info_ = new ::hbase::pb::VersionInfo(*from.version_info_);
  } else {
    version_info_ = NULL;
  }
  infoport_ = from.infoport_;
  // @@protoc_insertion_point(copy_constructor:hbase.pb.RegionServerInfo)
}

void RegionServerInfo::SharedCtor() {
  ::memset(&version_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&infoport_) -
      reinterpret_cast<char*>(&version_info_)) + sizeof(infoport_));
}

RegionServerInfo::~RegionServerInfo() {
  // @@protoc_insertion_point(destructor:hbase.pb.RegionServerInfo)
  SharedDtor();
}

void RegionServerInfo::SharedDtor() {
  if (this != internal_default_instance()) delete version_info_;
}

void RegionServerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegionServerInfo::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionServerInfo& RegionServerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_RegionServerInfo.base);
  return *internal_default_instance();
}


void RegionServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.RegionServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(version_info_ != NULL);
    version_info_->Clear();
  }
  infoport_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegionServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.RegionServerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 infoPort = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_infoport();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &infoport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hbase.pb.VersionInfo version_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.RegionServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.RegionServerInfo)
  return false;
#undef DO_
}

void RegionServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.RegionServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 infoPort = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->infoport(), output);
  }

  // optional .hbase.pb.VersionInfo version_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_version_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.RegionServerInfo)
}

::google::protobuf::uint8* RegionServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.RegionServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 infoPort = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->infoport(), target);
  }

  // optional .hbase.pb.VersionInfo version_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_version_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.RegionServerInfo)
  return target;
}

size_t RegionServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.RegionServerInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .hbase.pb.VersionInfo version_info = 2;
    if (has_version_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *version_info_);
    }

    // optional int32 infoPort = 1;
    if (has_infoport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->infoport());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegionServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.RegionServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionServerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.RegionServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.RegionServerInfo)
    MergeFrom(*source);
  }
}

void RegionServerInfo::MergeFrom(const RegionServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.RegionServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_version_info()->::hbase::pb::VersionInfo::MergeFrom(from.version_info());
    }
    if (cached_has_bits & 0x00000002u) {
      infoport_ = from.infoport_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RegionServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.RegionServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionServerInfo::CopyFrom(const RegionServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.RegionServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionServerInfo::IsInitialized() const {
  if (has_version_info()) {
    if (!this->version_info_->IsInitialized()) return false;
  }
  return true;
}

void RegionServerInfo::Swap(RegionServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionServerInfo::InternalSwap(RegionServerInfo* other) {
  using std::swap;
  swap(version_info_, other->version_info_);
  swap(infoport_, other->infoport_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegionServerInfo::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegionExceptionMessage::InitAsDefaultInstance() {
  ::hbase::pb::_RegionExceptionMessage_default_instance_._instance.get_mutable()->region_ = const_cast< ::hbase::pb::RegionSpecifier*>(
      ::hbase::pb::RegionSpecifier::internal_default_instance());
  ::hbase::pb::_RegionExceptionMessage_default_instance_._instance.get_mutable()->exception_ = const_cast< ::hbase::pb::NameBytesPair*>(
      ::hbase::pb::NameBytesPair::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionExceptionMessage::kRegionFieldNumber;
const int RegionExceptionMessage::kExceptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionExceptionMessage::RegionExceptionMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_RegionExceptionMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.RegionExceptionMessage)
}
RegionExceptionMessage::RegionExceptionMessage(const RegionExceptionMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region()) {
    region_ = new ::hbase::pb::RegionSpecifier(*from.region_);
  } else {
    region_ = NULL;
  }
  if (from.has_exception()) {
    exception_ = new ::hbase::pb::NameBytesPair(*from.exception_);
  } else {
    exception_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:hbase.pb.RegionExceptionMessage)
}

void RegionExceptionMessage::SharedCtor() {
  ::memset(&region_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exception_) -
      reinterpret_cast<char*>(&region_)) + sizeof(exception_));
}

RegionExceptionMessage::~RegionExceptionMessage() {
  // @@protoc_insertion_point(destructor:hbase.pb.RegionExceptionMessage)
  SharedDtor();
}

void RegionExceptionMessage::SharedDtor() {
  if (this != internal_default_instance()) delete region_;
  if (this != internal_default_instance()) delete exception_;
}

void RegionExceptionMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegionExceptionMessage::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionExceptionMessage& RegionExceptionMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_RegionExceptionMessage.base);
  return *internal_default_instance();
}


void RegionExceptionMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.RegionExceptionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(region_ != NULL);
      region_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(exception_ != NULL);
      exception_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegionExceptionMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.RegionExceptionMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .hbase.pb.RegionSpecifier region = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .hbase.pb.NameBytesPair exception = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.RegionExceptionMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.RegionExceptionMessage)
  return false;
#undef DO_
}

void RegionExceptionMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.RegionExceptionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .hbase.pb.RegionSpecifier region = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region(), output);
  }

  // required .hbase.pb.NameBytesPair exception = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_exception(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.RegionExceptionMessage)
}

::google::protobuf::uint8* RegionExceptionMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.RegionExceptionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .hbase.pb.RegionSpecifier region = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region(), deterministic, target);
  }

  // required .hbase.pb.NameBytesPair exception = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_exception(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.RegionExceptionMessage)
  return target;
}

size_t RegionExceptionMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hbase.pb.RegionExceptionMessage)
  size_t total_size = 0;

  if (has_region()) {
    // required .hbase.pb.RegionSpecifier region = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_);
  }

  if (has_exception()) {
    // required .hbase.pb.NameBytesPair exception = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  return total_size;
}
size_t RegionExceptionMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.RegionExceptionMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .hbase.pb.RegionSpecifier region = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_);

    // required .hbase.pb.NameBytesPair exception = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exception_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegionExceptionMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.RegionExceptionMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionExceptionMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionExceptionMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.RegionExceptionMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.RegionExceptionMessage)
    MergeFrom(*source);
  }
}

void RegionExceptionMessage::MergeFrom(const RegionExceptionMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.RegionExceptionMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_region()->::hbase::pb::RegionSpecifier::MergeFrom(from.region());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_exception()->::hbase::pb::NameBytesPair::MergeFrom(from.exception());
    }
  }
}

void RegionExceptionMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.RegionExceptionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionExceptionMessage::CopyFrom(const RegionExceptionMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.RegionExceptionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionExceptionMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_region()) {
    if (!this->region_->IsInitialized()) return false;
  }
  if (has_exception()) {
    if (!this->exception_->IsInitialized()) return false;
  }
  return true;
}

void RegionExceptionMessage::Swap(RegionExceptionMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionExceptionMessage::InternalSwap(RegionExceptionMessage* other) {
  using std::swap;
  swap(region_, other->region_);
  swap(exception_, other->exception_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegionExceptionMessage::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CacheEvictionStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CacheEvictionStats::kEvictedBlocksFieldNumber;
const int CacheEvictionStats::kBytesEvictedFieldNumber;
const int CacheEvictionStats::kMaxCacheSizeFieldNumber;
const int CacheEvictionStats::kExceptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CacheEvictionStats::CacheEvictionStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HBase_2eproto::scc_info_CacheEvictionStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hbase.pb.CacheEvictionStats)
}
CacheEvictionStats::CacheEvictionStats(const CacheEvictionStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      exception_(from.exception_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&evicted_blocks_, &from.evicted_blocks_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_cache_size_) -
    reinterpret_cast<char*>(&evicted_blocks_)) + sizeof(max_cache_size_));
  // @@protoc_insertion_point(copy_constructor:hbase.pb.CacheEvictionStats)
}

void CacheEvictionStats::SharedCtor() {
  ::memset(&evicted_blocks_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_cache_size_) -
      reinterpret_cast<char*>(&evicted_blocks_)) + sizeof(max_cache_size_));
}

CacheEvictionStats::~CacheEvictionStats() {
  // @@protoc_insertion_point(destructor:hbase.pb.CacheEvictionStats)
  SharedDtor();
}

void CacheEvictionStats::SharedDtor() {
}

void CacheEvictionStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CacheEvictionStats::descriptor() {
  ::protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CacheEvictionStats& CacheEvictionStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HBase_2eproto::scc_info_CacheEvictionStats.base);
  return *internal_default_instance();
}


void CacheEvictionStats::Clear() {
// @@protoc_insertion_point(message_clear_start:hbase.pb.CacheEvictionStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exception_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&evicted_blocks_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_cache_size_) -
        reinterpret_cast<char*>(&evicted_blocks_)) + sizeof(max_cache_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CacheEvictionStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hbase.pb.CacheEvictionStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 evicted_blocks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_evicted_blocks();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &evicted_blocks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 bytes_evicted = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bytes_evicted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_evicted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 max_cache_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_max_cache_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_cache_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hbase.pb.RegionExceptionMessage exception = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hbase.pb.CacheEvictionStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hbase.pb.CacheEvictionStats)
  return false;
#undef DO_
}

void CacheEvictionStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hbase.pb.CacheEvictionStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 evicted_blocks = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->evicted_blocks(), output);
  }

  // optional int64 bytes_evicted = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->bytes_evicted(), output);
  }

  // optional int64 max_cache_size = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->max_cache_size(), output);
  }

  // repeated .hbase.pb.RegionExceptionMessage exception = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exception_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->exception(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hbase.pb.CacheEvictionStats)
}

::google::protobuf::uint8* CacheEvictionStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hbase.pb.CacheEvictionStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 evicted_blocks = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->evicted_blocks(), target);
  }

  // optional int64 bytes_evicted = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->bytes_evicted(), target);
  }

  // optional int64 max_cache_size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->max_cache_size(), target);
  }

  // repeated .hbase.pb.RegionExceptionMessage exception = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exception_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->exception(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hbase.pb.CacheEvictionStats)
  return target;
}

size_t CacheEvictionStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hbase.pb.CacheEvictionStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .hbase.pb.RegionExceptionMessage exception = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->exception_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->exception(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional int64 evicted_blocks = 1;
    if (has_evicted_blocks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->evicted_blocks());
    }

    // optional int64 bytes_evicted = 2;
    if (has_bytes_evicted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bytes_evicted());
    }

    // optional int64 max_cache_size = 3;
    if (has_max_cache_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->max_cache_size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CacheEvictionStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hbase.pb.CacheEvictionStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CacheEvictionStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CacheEvictionStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hbase.pb.CacheEvictionStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hbase.pb.CacheEvictionStats)
    MergeFrom(*source);
  }
}

void CacheEvictionStats::MergeFrom(const CacheEvictionStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hbase.pb.CacheEvictionStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exception_.MergeFrom(from.exception_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      evicted_blocks_ = from.evicted_blocks_;
    }
    if (cached_has_bits & 0x00000002u) {
      bytes_evicted_ = from.bytes_evicted_;
    }
    if (cached_has_bits & 0x00000004u) {
      max_cache_size_ = from.max_cache_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CacheEvictionStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hbase.pb.CacheEvictionStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CacheEvictionStats::CopyFrom(const CacheEvictionStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hbase.pb.CacheEvictionStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CacheEvictionStats::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->exception())) return false;
  return true;
}

void CacheEvictionStats::Swap(CacheEvictionStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CacheEvictionStats::InternalSwap(CacheEvictionStats* other) {
  using std::swap;
  CastToBase(&exception_)->InternalSwap(CastToBase(&other->exception_));
  swap(evicted_blocks_, other->evicted_blocks_);
  swap(bytes_evicted_, other->bytes_evicted_);
  swap(max_cache_size_, other->max_cache_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CacheEvictionStats::GetMetadata() const {
  protobuf_HBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
}  // namespace hbase
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::TableName* Arena::CreateMaybeMessage< ::hbase::pb::TableName >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::TableName >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::TableSchema* Arena::CreateMaybeMessage< ::hbase::pb::TableSchema >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::TableSchema >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::TableState* Arena::CreateMaybeMessage< ::hbase::pb::TableState >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::TableState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::ColumnFamilySchema* Arena::CreateMaybeMessage< ::hbase::pb::ColumnFamilySchema >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::ColumnFamilySchema >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::RegionInfo* Arena::CreateMaybeMessage< ::hbase::pb::RegionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::RegionInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::FavoredNodes* Arena::CreateMaybeMessage< ::hbase::pb::FavoredNodes >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::FavoredNodes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::RegionSpecifier* Arena::CreateMaybeMessage< ::hbase::pb::RegionSpecifier >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::RegionSpecifier >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::TimeRange* Arena::CreateMaybeMessage< ::hbase::pb::TimeRange >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::TimeRange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::TimeRangeTracker* Arena::CreateMaybeMessage< ::hbase::pb::TimeRangeTracker >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::TimeRangeTracker >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::ColumnFamilyTimeRange* Arena::CreateMaybeMessage< ::hbase::pb::ColumnFamilyTimeRange >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::ColumnFamilyTimeRange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::ServerName* Arena::CreateMaybeMessage< ::hbase::pb::ServerName >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::ServerName >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::Coprocessor* Arena::CreateMaybeMessage< ::hbase::pb::Coprocessor >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::Coprocessor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::NameStringPair* Arena::CreateMaybeMessage< ::hbase::pb::NameStringPair >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::NameStringPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::NameBytesPair* Arena::CreateMaybeMessage< ::hbase::pb::NameBytesPair >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::NameBytesPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::BytesBytesPair* Arena::CreateMaybeMessage< ::hbase::pb::BytesBytesPair >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::BytesBytesPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::NameInt64Pair* Arena::CreateMaybeMessage< ::hbase::pb::NameInt64Pair >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::NameInt64Pair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::ProcedureDescription* Arena::CreateMaybeMessage< ::hbase::pb::ProcedureDescription >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::ProcedureDescription >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::EmptyMsg* Arena::CreateMaybeMessage< ::hbase::pb::EmptyMsg >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::EmptyMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::LongMsg* Arena::CreateMaybeMessage< ::hbase::pb::LongMsg >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::LongMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::DoubleMsg* Arena::CreateMaybeMessage< ::hbase::pb::DoubleMsg >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::DoubleMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::BigDecimalMsg* Arena::CreateMaybeMessage< ::hbase::pb::BigDecimalMsg >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::BigDecimalMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::UUID* Arena::CreateMaybeMessage< ::hbase::pb::UUID >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::UUID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::NamespaceDescriptor* Arena::CreateMaybeMessage< ::hbase::pb::NamespaceDescriptor >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::NamespaceDescriptor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::VersionInfo* Arena::CreateMaybeMessage< ::hbase::pb::VersionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::VersionInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::RegionServerInfo* Arena::CreateMaybeMessage< ::hbase::pb::RegionServerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::RegionServerInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::RegionExceptionMessage* Arena::CreateMaybeMessage< ::hbase::pb::RegionExceptionMessage >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::RegionExceptionMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hbase::pb::CacheEvictionStats* Arena::CreateMaybeMessage< ::hbase::pb::CacheEvictionStats >(Arena* arena) {
  return Arena::CreateInternal< ::hbase::pb::CacheEvictionStats >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
