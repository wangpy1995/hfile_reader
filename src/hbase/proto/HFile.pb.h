// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HFile.proto

#ifndef PROTOBUF_INCLUDED_HFile_2eproto
#define PROTOBUF_INCLUDED_HFile_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "HBase.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_HFile_2eproto 

namespace protobuf_HFile_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_HFile_2eproto
namespace hbase {
namespace pb {
class FileInfoProto;
class FileInfoProtoDefaultTypeInternal;
extern FileInfoProtoDefaultTypeInternal _FileInfoProto_default_instance_;
class FileTrailerProto;
class FileTrailerProtoDefaultTypeInternal;
extern FileTrailerProtoDefaultTypeInternal _FileTrailerProto_default_instance_;
}  // namespace pb
}  // namespace hbase
namespace google {
namespace protobuf {
template<> ::hbase::pb::FileInfoProto* Arena::CreateMaybeMessage<::hbase::pb::FileInfoProto>(Arena*);
template<> ::hbase::pb::FileTrailerProto* Arena::CreateMaybeMessage<::hbase::pb::FileTrailerProto>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace hbase {
namespace pb {

// ===================================================================

class FileInfoProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hbase.pb.FileInfoProto) */ {
 public:
  FileInfoProto();
  virtual ~FileInfoProto();

  FileInfoProto(const FileInfoProto& from);

  inline FileInfoProto& operator=(const FileInfoProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileInfoProto(FileInfoProto&& from) noexcept
    : FileInfoProto() {
    *this = ::std::move(from);
  }

  inline FileInfoProto& operator=(FileInfoProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileInfoProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileInfoProto* internal_default_instance() {
    return reinterpret_cast<const FileInfoProto*>(
               &_FileInfoProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(FileInfoProto* other);
  friend void swap(FileInfoProto& a, FileInfoProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileInfoProto* New() const final {
    return CreateMaybeMessage<FileInfoProto>(NULL);
  }

  FileInfoProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FileInfoProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FileInfoProto& from);
  void MergeFrom(const FileInfoProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FileInfoProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hbase.pb.BytesBytesPair map_entry = 1;
  int map_entry_size() const;
  void clear_map_entry();
  static const int kMapEntryFieldNumber = 1;
  ::hbase::pb::BytesBytesPair* mutable_map_entry(int index);
  ::google::protobuf::RepeatedPtrField< ::hbase::pb::BytesBytesPair >*
      mutable_map_entry();
  const ::hbase::pb::BytesBytesPair& map_entry(int index) const;
  ::hbase::pb::BytesBytesPair* add_map_entry();
  const ::google::protobuf::RepeatedPtrField< ::hbase::pb::BytesBytesPair >&
      map_entry() const;

  // @@protoc_insertion_point(class_scope:hbase.pb.FileInfoProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::hbase::pb::BytesBytesPair > map_entry_;
  friend struct ::protobuf_HFile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileTrailerProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hbase.pb.FileTrailerProto) */ {
 public:
  FileTrailerProto();
  virtual ~FileTrailerProto();

  FileTrailerProto(const FileTrailerProto& from);

  inline FileTrailerProto& operator=(const FileTrailerProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileTrailerProto(FileTrailerProto&& from) noexcept
    : FileTrailerProto() {
    *this = ::std::move(from);
  }

  inline FileTrailerProto& operator=(FileTrailerProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileTrailerProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileTrailerProto* internal_default_instance() {
    return reinterpret_cast<const FileTrailerProto*>(
               &_FileTrailerProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(FileTrailerProto* other);
  friend void swap(FileTrailerProto& a, FileTrailerProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileTrailerProto* New() const final {
    return CreateMaybeMessage<FileTrailerProto>(NULL);
  }

  FileTrailerProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FileTrailerProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FileTrailerProto& from);
  void MergeFrom(const FileTrailerProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FileTrailerProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string comparator_class_name_ = 11;
  bool has_comparator_class_name() const;
  void clear_comparator_class_name();
  static const int kComparatorClassNameFieldNumber = 11;
  const ::std::string& comparator_class_name() const;
  void set_comparator_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_comparator_class_name(::std::string&& value);
  #endif
  void set_comparator_class_name(const char* value);
  void set_comparator_class_name(const char* value, size_t size);
  ::std::string* mutable_comparator_class_name();
  ::std::string* release_comparator_class_name();
  void set_allocated_comparator_class_name(::std::string* comparator_class_name);

  // optional bytes encryption_key = 13;
  bool has_encryption_key() const;
  void clear_encryption_key();
  static const int kEncryptionKeyFieldNumber = 13;
  const ::std::string& encryption_key() const;
  void set_encryption_key(const ::std::string& value);
  #if LANG_CXX11
  void set_encryption_key(::std::string&& value);
  #endif
  void set_encryption_key(const char* value);
  void set_encryption_key(const void* value, size_t size);
  ::std::string* mutable_encryption_key();
  ::std::string* release_encryption_key();
  void set_allocated_encryption_key(::std::string* encryption_key);

  // optional uint64 file_info_offset = 1;
  bool has_file_info_offset() const;
  void clear_file_info_offset();
  static const int kFileInfoOffsetFieldNumber = 1;
  ::google::protobuf::uint64 file_info_offset() const;
  void set_file_info_offset(::google::protobuf::uint64 value);

  // optional uint64 load_on_open_data_offset = 2;
  bool has_load_on_open_data_offset() const;
  void clear_load_on_open_data_offset();
  static const int kLoadOnOpenDataOffsetFieldNumber = 2;
  ::google::protobuf::uint64 load_on_open_data_offset() const;
  void set_load_on_open_data_offset(::google::protobuf::uint64 value);

  // optional uint64 uncompressed_data_index_size = 3;
  bool has_uncompressed_data_index_size() const;
  void clear_uncompressed_data_index_size();
  static const int kUncompressedDataIndexSizeFieldNumber = 3;
  ::google::protobuf::uint64 uncompressed_data_index_size() const;
  void set_uncompressed_data_index_size(::google::protobuf::uint64 value);

  // optional uint64 total_uncompressed_bytes = 4;
  bool has_total_uncompressed_bytes() const;
  void clear_total_uncompressed_bytes();
  static const int kTotalUncompressedBytesFieldNumber = 4;
  ::google::protobuf::uint64 total_uncompressed_bytes() const;
  void set_total_uncompressed_bytes(::google::protobuf::uint64 value);

  // optional uint32 data_index_count = 5;
  bool has_data_index_count() const;
  void clear_data_index_count();
  static const int kDataIndexCountFieldNumber = 5;
  ::google::protobuf::uint32 data_index_count() const;
  void set_data_index_count(::google::protobuf::uint32 value);

  // optional uint32 meta_index_count = 6;
  bool has_meta_index_count() const;
  void clear_meta_index_count();
  static const int kMetaIndexCountFieldNumber = 6;
  ::google::protobuf::uint32 meta_index_count() const;
  void set_meta_index_count(::google::protobuf::uint32 value);

  // optional uint64 entry_count = 7;
  bool has_entry_count() const;
  void clear_entry_count();
  static const int kEntryCountFieldNumber = 7;
  ::google::protobuf::uint64 entry_count() const;
  void set_entry_count(::google::protobuf::uint64 value);

  // optional uint64 first_data_block_offset = 9;
  bool has_first_data_block_offset() const;
  void clear_first_data_block_offset();
  static const int kFirstDataBlockOffsetFieldNumber = 9;
  ::google::protobuf::uint64 first_data_block_offset() const;
  void set_first_data_block_offset(::google::protobuf::uint64 value);

  // optional uint64 last_data_block_offset = 10;
  bool has_last_data_block_offset() const;
  void clear_last_data_block_offset();
  static const int kLastDataBlockOffsetFieldNumber = 10;
  ::google::protobuf::uint64 last_data_block_offset() const;
  void set_last_data_block_offset(::google::protobuf::uint64 value);

  // optional uint32 num_data_index_levels = 8;
  bool has_num_data_index_levels() const;
  void clear_num_data_index_levels();
  static const int kNumDataIndexLevelsFieldNumber = 8;
  ::google::protobuf::uint32 num_data_index_levels() const;
  void set_num_data_index_levels(::google::protobuf::uint32 value);

  // optional uint32 compression_codec = 12;
  bool has_compression_codec() const;
  void clear_compression_codec();
  static const int kCompressionCodecFieldNumber = 12;
  ::google::protobuf::uint32 compression_codec() const;
  void set_compression_codec(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.FileTrailerProto)
 private:
  void set_has_file_info_offset();
  void clear_has_file_info_offset();
  void set_has_load_on_open_data_offset();
  void clear_has_load_on_open_data_offset();
  void set_has_uncompressed_data_index_size();
  void clear_has_uncompressed_data_index_size();
  void set_has_total_uncompressed_bytes();
  void clear_has_total_uncompressed_bytes();
  void set_has_data_index_count();
  void clear_has_data_index_count();
  void set_has_meta_index_count();
  void clear_has_meta_index_count();
  void set_has_entry_count();
  void clear_has_entry_count();
  void set_has_num_data_index_levels();
  void clear_has_num_data_index_levels();
  void set_has_first_data_block_offset();
  void clear_has_first_data_block_offset();
  void set_has_last_data_block_offset();
  void clear_has_last_data_block_offset();
  void set_has_comparator_class_name();
  void clear_has_comparator_class_name();
  void set_has_compression_codec();
  void clear_has_compression_codec();
  void set_has_encryption_key();
  void clear_has_encryption_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr comparator_class_name_;
  ::google::protobuf::internal::ArenaStringPtr encryption_key_;
  ::google::protobuf::uint64 file_info_offset_;
  ::google::protobuf::uint64 load_on_open_data_offset_;
  ::google::protobuf::uint64 uncompressed_data_index_size_;
  ::google::protobuf::uint64 total_uncompressed_bytes_;
  ::google::protobuf::uint32 data_index_count_;
  ::google::protobuf::uint32 meta_index_count_;
  ::google::protobuf::uint64 entry_count_;
  ::google::protobuf::uint64 first_data_block_offset_;
  ::google::protobuf::uint64 last_data_block_offset_;
  ::google::protobuf::uint32 num_data_index_levels_;
  ::google::protobuf::uint32 compression_codec_;
  friend struct ::protobuf_HFile_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FileInfoProto

// repeated .hbase.pb.BytesBytesPair map_entry = 1;
inline int FileInfoProto::map_entry_size() const {
  return map_entry_.size();
}
inline ::hbase::pb::BytesBytesPair* FileInfoProto::mutable_map_entry(int index) {
  // @@protoc_insertion_point(field_mutable:hbase.pb.FileInfoProto.map_entry)
  return map_entry_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::BytesBytesPair >*
FileInfoProto::mutable_map_entry() {
  // @@protoc_insertion_point(field_mutable_list:hbase.pb.FileInfoProto.map_entry)
  return &map_entry_;
}
inline const ::hbase::pb::BytesBytesPair& FileInfoProto::map_entry(int index) const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileInfoProto.map_entry)
  return map_entry_.Get(index);
}
inline ::hbase::pb::BytesBytesPair* FileInfoProto::add_map_entry() {
  // @@protoc_insertion_point(field_add:hbase.pb.FileInfoProto.map_entry)
  return map_entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::BytesBytesPair >&
FileInfoProto::map_entry() const {
  // @@protoc_insertion_point(field_list:hbase.pb.FileInfoProto.map_entry)
  return map_entry_;
}

// -------------------------------------------------------------------

// FileTrailerProto

// optional uint64 file_info_offset = 1;
inline bool FileTrailerProto::has_file_info_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FileTrailerProto::set_has_file_info_offset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FileTrailerProto::clear_has_file_info_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FileTrailerProto::clear_file_info_offset() {
  file_info_offset_ = GOOGLE_ULONGLONG(0);
  clear_has_file_info_offset();
}
inline ::google::protobuf::uint64 FileTrailerProto::file_info_offset() const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileTrailerProto.file_info_offset)
  return file_info_offset_;
}
inline void FileTrailerProto::set_file_info_offset(::google::protobuf::uint64 value) {
  set_has_file_info_offset();
  file_info_offset_ = value;
  // @@protoc_insertion_point(field_set:hbase.pb.FileTrailerProto.file_info_offset)
}

// optional uint64 load_on_open_data_offset = 2;
inline bool FileTrailerProto::has_load_on_open_data_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FileTrailerProto::set_has_load_on_open_data_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FileTrailerProto::clear_has_load_on_open_data_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FileTrailerProto::clear_load_on_open_data_offset() {
  load_on_open_data_offset_ = GOOGLE_ULONGLONG(0);
  clear_has_load_on_open_data_offset();
}
inline ::google::protobuf::uint64 FileTrailerProto::load_on_open_data_offset() const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileTrailerProto.load_on_open_data_offset)
  return load_on_open_data_offset_;
}
inline void FileTrailerProto::set_load_on_open_data_offset(::google::protobuf::uint64 value) {
  set_has_load_on_open_data_offset();
  load_on_open_data_offset_ = value;
  // @@protoc_insertion_point(field_set:hbase.pb.FileTrailerProto.load_on_open_data_offset)
}

// optional uint64 uncompressed_data_index_size = 3;
inline bool FileTrailerProto::has_uncompressed_data_index_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FileTrailerProto::set_has_uncompressed_data_index_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FileTrailerProto::clear_has_uncompressed_data_index_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FileTrailerProto::clear_uncompressed_data_index_size() {
  uncompressed_data_index_size_ = GOOGLE_ULONGLONG(0);
  clear_has_uncompressed_data_index_size();
}
inline ::google::protobuf::uint64 FileTrailerProto::uncompressed_data_index_size() const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileTrailerProto.uncompressed_data_index_size)
  return uncompressed_data_index_size_;
}
inline void FileTrailerProto::set_uncompressed_data_index_size(::google::protobuf::uint64 value) {
  set_has_uncompressed_data_index_size();
  uncompressed_data_index_size_ = value;
  // @@protoc_insertion_point(field_set:hbase.pb.FileTrailerProto.uncompressed_data_index_size)
}

// optional uint64 total_uncompressed_bytes = 4;
inline bool FileTrailerProto::has_total_uncompressed_bytes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FileTrailerProto::set_has_total_uncompressed_bytes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FileTrailerProto::clear_has_total_uncompressed_bytes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FileTrailerProto::clear_total_uncompressed_bytes() {
  total_uncompressed_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_total_uncompressed_bytes();
}
inline ::google::protobuf::uint64 FileTrailerProto::total_uncompressed_bytes() const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileTrailerProto.total_uncompressed_bytes)
  return total_uncompressed_bytes_;
}
inline void FileTrailerProto::set_total_uncompressed_bytes(::google::protobuf::uint64 value) {
  set_has_total_uncompressed_bytes();
  total_uncompressed_bytes_ = value;
  // @@protoc_insertion_point(field_set:hbase.pb.FileTrailerProto.total_uncompressed_bytes)
}

// optional uint32 data_index_count = 5;
inline bool FileTrailerProto::has_data_index_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FileTrailerProto::set_has_data_index_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FileTrailerProto::clear_has_data_index_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FileTrailerProto::clear_data_index_count() {
  data_index_count_ = 0u;
  clear_has_data_index_count();
}
inline ::google::protobuf::uint32 FileTrailerProto::data_index_count() const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileTrailerProto.data_index_count)
  return data_index_count_;
}
inline void FileTrailerProto::set_data_index_count(::google::protobuf::uint32 value) {
  set_has_data_index_count();
  data_index_count_ = value;
  // @@protoc_insertion_point(field_set:hbase.pb.FileTrailerProto.data_index_count)
}

// optional uint32 meta_index_count = 6;
inline bool FileTrailerProto::has_meta_index_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FileTrailerProto::set_has_meta_index_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FileTrailerProto::clear_has_meta_index_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FileTrailerProto::clear_meta_index_count() {
  meta_index_count_ = 0u;
  clear_has_meta_index_count();
}
inline ::google::protobuf::uint32 FileTrailerProto::meta_index_count() const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileTrailerProto.meta_index_count)
  return meta_index_count_;
}
inline void FileTrailerProto::set_meta_index_count(::google::protobuf::uint32 value) {
  set_has_meta_index_count();
  meta_index_count_ = value;
  // @@protoc_insertion_point(field_set:hbase.pb.FileTrailerProto.meta_index_count)
}

// optional uint64 entry_count = 7;
inline bool FileTrailerProto::has_entry_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FileTrailerProto::set_has_entry_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FileTrailerProto::clear_has_entry_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FileTrailerProto::clear_entry_count() {
  entry_count_ = GOOGLE_ULONGLONG(0);
  clear_has_entry_count();
}
inline ::google::protobuf::uint64 FileTrailerProto::entry_count() const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileTrailerProto.entry_count)
  return entry_count_;
}
inline void FileTrailerProto::set_entry_count(::google::protobuf::uint64 value) {
  set_has_entry_count();
  entry_count_ = value;
  // @@protoc_insertion_point(field_set:hbase.pb.FileTrailerProto.entry_count)
}

// optional uint32 num_data_index_levels = 8;
inline bool FileTrailerProto::has_num_data_index_levels() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FileTrailerProto::set_has_num_data_index_levels() {
  _has_bits_[0] |= 0x00000800u;
}
inline void FileTrailerProto::clear_has_num_data_index_levels() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void FileTrailerProto::clear_num_data_index_levels() {
  num_data_index_levels_ = 0u;
  clear_has_num_data_index_levels();
}
inline ::google::protobuf::uint32 FileTrailerProto::num_data_index_levels() const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileTrailerProto.num_data_index_levels)
  return num_data_index_levels_;
}
inline void FileTrailerProto::set_num_data_index_levels(::google::protobuf::uint32 value) {
  set_has_num_data_index_levels();
  num_data_index_levels_ = value;
  // @@protoc_insertion_point(field_set:hbase.pb.FileTrailerProto.num_data_index_levels)
}

// optional uint64 first_data_block_offset = 9;
inline bool FileTrailerProto::has_first_data_block_offset() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FileTrailerProto::set_has_first_data_block_offset() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FileTrailerProto::clear_has_first_data_block_offset() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FileTrailerProto::clear_first_data_block_offset() {
  first_data_block_offset_ = GOOGLE_ULONGLONG(0);
  clear_has_first_data_block_offset();
}
inline ::google::protobuf::uint64 FileTrailerProto::first_data_block_offset() const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileTrailerProto.first_data_block_offset)
  return first_data_block_offset_;
}
inline void FileTrailerProto::set_first_data_block_offset(::google::protobuf::uint64 value) {
  set_has_first_data_block_offset();
  first_data_block_offset_ = value;
  // @@protoc_insertion_point(field_set:hbase.pb.FileTrailerProto.first_data_block_offset)
}

// optional uint64 last_data_block_offset = 10;
inline bool FileTrailerProto::has_last_data_block_offset() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FileTrailerProto::set_has_last_data_block_offset() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FileTrailerProto::clear_has_last_data_block_offset() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FileTrailerProto::clear_last_data_block_offset() {
  last_data_block_offset_ = GOOGLE_ULONGLONG(0);
  clear_has_last_data_block_offset();
}
inline ::google::protobuf::uint64 FileTrailerProto::last_data_block_offset() const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileTrailerProto.last_data_block_offset)
  return last_data_block_offset_;
}
inline void FileTrailerProto::set_last_data_block_offset(::google::protobuf::uint64 value) {
  set_has_last_data_block_offset();
  last_data_block_offset_ = value;
  // @@protoc_insertion_point(field_set:hbase.pb.FileTrailerProto.last_data_block_offset)
}

// optional string comparator_class_name_ = 11;
inline bool FileTrailerProto::has_comparator_class_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileTrailerProto::set_has_comparator_class_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileTrailerProto::clear_has_comparator_class_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileTrailerProto::clear_comparator_class_name() {
  comparator_class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comparator_class_name();
}
inline const ::std::string& FileTrailerProto::comparator_class_name() const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileTrailerProto.comparator_class_name_)
  return comparator_class_name_.GetNoArena();
}
inline void FileTrailerProto::set_comparator_class_name(const ::std::string& value) {
  set_has_comparator_class_name();
  comparator_class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hbase.pb.FileTrailerProto.comparator_class_name_)
}
#if LANG_CXX11
inline void FileTrailerProto::set_comparator_class_name(::std::string&& value) {
  set_has_comparator_class_name();
  comparator_class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hbase.pb.FileTrailerProto.comparator_class_name_)
}
#endif
inline void FileTrailerProto::set_comparator_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_comparator_class_name();
  comparator_class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hbase.pb.FileTrailerProto.comparator_class_name_)
}
inline void FileTrailerProto::set_comparator_class_name(const char* value, size_t size) {
  set_has_comparator_class_name();
  comparator_class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hbase.pb.FileTrailerProto.comparator_class_name_)
}
inline ::std::string* FileTrailerProto::mutable_comparator_class_name() {
  set_has_comparator_class_name();
  // @@protoc_insertion_point(field_mutable:hbase.pb.FileTrailerProto.comparator_class_name_)
  return comparator_class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileTrailerProto::release_comparator_class_name() {
  // @@protoc_insertion_point(field_release:hbase.pb.FileTrailerProto.comparator_class_name_)
  if (!has_comparator_class_name()) {
    return NULL;
  }
  clear_has_comparator_class_name();
  return comparator_class_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileTrailerProto::set_allocated_comparator_class_name(::std::string* comparator_class_name) {
  if (comparator_class_name != NULL) {
    set_has_comparator_class_name();
  } else {
    clear_has_comparator_class_name();
  }
  comparator_class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comparator_class_name);
  // @@protoc_insertion_point(field_set_allocated:hbase.pb.FileTrailerProto.comparator_class_name_)
}

// optional uint32 compression_codec = 12;
inline bool FileTrailerProto::has_compression_codec() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void FileTrailerProto::set_has_compression_codec() {
  _has_bits_[0] |= 0x00001000u;
}
inline void FileTrailerProto::clear_has_compression_codec() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void FileTrailerProto::clear_compression_codec() {
  compression_codec_ = 0u;
  clear_has_compression_codec();
}
inline ::google::protobuf::uint32 FileTrailerProto::compression_codec() const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileTrailerProto.compression_codec)
  return compression_codec_;
}
inline void FileTrailerProto::set_compression_codec(::google::protobuf::uint32 value) {
  set_has_compression_codec();
  compression_codec_ = value;
  // @@protoc_insertion_point(field_set:hbase.pb.FileTrailerProto.compression_codec)
}

// optional bytes encryption_key = 13;
inline bool FileTrailerProto::has_encryption_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FileTrailerProto::set_has_encryption_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FileTrailerProto::clear_has_encryption_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FileTrailerProto::clear_encryption_key() {
  encryption_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encryption_key();
}
inline const ::std::string& FileTrailerProto::encryption_key() const {
  // @@protoc_insertion_point(field_get:hbase.pb.FileTrailerProto.encryption_key)
  return encryption_key_.GetNoArena();
}
inline void FileTrailerProto::set_encryption_key(const ::std::string& value) {
  set_has_encryption_key();
  encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hbase.pb.FileTrailerProto.encryption_key)
}
#if LANG_CXX11
inline void FileTrailerProto::set_encryption_key(::std::string&& value) {
  set_has_encryption_key();
  encryption_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hbase.pb.FileTrailerProto.encryption_key)
}
#endif
inline void FileTrailerProto::set_encryption_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_encryption_key();
  encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hbase.pb.FileTrailerProto.encryption_key)
}
inline void FileTrailerProto::set_encryption_key(const void* value, size_t size) {
  set_has_encryption_key();
  encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hbase.pb.FileTrailerProto.encryption_key)
}
inline ::std::string* FileTrailerProto::mutable_encryption_key() {
  set_has_encryption_key();
  // @@protoc_insertion_point(field_mutable:hbase.pb.FileTrailerProto.encryption_key)
  return encryption_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileTrailerProto::release_encryption_key() {
  // @@protoc_insertion_point(field_release:hbase.pb.FileTrailerProto.encryption_key)
  if (!has_encryption_key()) {
    return NULL;
  }
  clear_has_encryption_key();
  return encryption_key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileTrailerProto::set_allocated_encryption_key(::std::string* encryption_key) {
  if (encryption_key != NULL) {
    set_has_encryption_key();
  } else {
    clear_has_encryption_key();
  }
  encryption_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encryption_key);
  // @@protoc_insertion_point(field_set_allocated:hbase.pb.FileTrailerProto.encryption_key)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace hbase

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_HFile_2eproto
